// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-794788004739538112"},"updated":{"$t":"2021-11-20T17:49:02.007+03:00"},"category":[{"term":"ардуино"},{"term":"подключение"},{"term":"энергопотребление"},{"term":"микросхема"},{"term":"прерывания"},{"term":"программатор"},{"term":"atmega328p"},{"term":"проект"},{"term":"энкодер вращения"},{"term":"lcd"},{"term":"tiny"},{"term":"ide"},{"term":"spi"},{"term":"дребезг контактов"},{"term":"arduino pro mini"},{"term":"загрузчик"},{"term":"RDA5807M"},{"term":"digispark"},{"term":"midi"},{"term":"датчик"},{"term":"пьезоизлучатель"},{"term":"Светодиодная матрица"},{"term":"блютуз"},{"term":"фоторезистор"}],"title":{"type":"text","$t":"Про Ардуино и не только"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/-\/lcd?alt=json-in-script\u0026max-results=6"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/search\/label\/lcd"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"6"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"6"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-7998652808377710845"},"published":{"$t":"2020-09-07T19:40:00.017+03:00"},"updated":{"$t":"2020-11-29T13:00:05.162+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"LiquidCrystal_I2C_Menu - библиотека для создания меню на ЖК дисплее и Ардуино. Новые возможности"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-5fQl2ZwaFwQ\/X1dlNilTOSI\/AAAAAAAABPw\/fTG-ielgYIMVvhWUbCqtUiZJ_nUaPEDEQCNcBGAsYHQ\/s800\/LCI2C_Menu.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Меню на Ардуино\" border=\"0\" data-original-height=\"413\" data-original-width=\"800\" height=\"206\" src=\"https:\/\/1.bp.blogspot.com\/-5fQl2ZwaFwQ\/X1dlNilTOSI\/AAAAAAAABPw\/fTG-ielgYIMVvhWUbCqtUiZJ_nUaPEDEQCNcBGAsYHQ\/w400-h206\/LCI2C_Menu.jpg\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003EВ одной из прошлых публикаций я писал о своей библиотеке\u0026nbsp;LiquidCrystal_I2C_Ext для создания меню на текстовом LCD дисплее и энкодере вращения. Библиотека получилась довольно интересная. Только название, как выяснилось впоследствии, уже используется. Поэтому я принял решение переименовать её в LiquidCrystal_I2C_Menu. Кроме нового имени в ней появились и новые возможности. А недавно я сделал версию библиотеки для управления с помощью кнопок - LiquidCrystal_I2C_Menu_Btns. Итого на ваш выбор представлены две библиотеки, о которых пойдет речь в сегодняшней статье.\u003Cspan\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003C\/span\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EГде качать\u003C\/h2\u003E\u003Cdiv\u003EБиблиотеки находятся на github по ссылкам:\u003C\/div\u003E\u003Cdiv\u003E\u003Ca href=\"https:\/\/github.com\/VladimirTsibrov\/LiquidCrystal_I2C_Menu\" target=\"_blank\"\u003Ehttps:\/\/github.com\/VladimirTsibrov\/LiquidCrystal_I2C_Menu\u003C\/a\u003E - управление энкодером\u003C\/div\u003E\u003Cdiv\u003E\u003Ca href=\"https:\/\/github.com\/VladimirTsibrov\/LiquidCrystal_I2C_Menu_Btns\" target=\"_blank\"\u003Ehttps:\/\/github.com\/VladimirTsibrov\/LiquidCrystal_I2C_Menu_Btns\u003C\/a\u003E\u0026nbsp;- управление кнопками\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EЧтобы скачать интересующую библиотеку необходимо нажать на кнопку Code, затем Download ZIP:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-0Xy75AmaWEo\/X1Ya5NmHvWI\/AAAAAAAABOM\/wT-hxIYOGScgRgQvkVD7-jmr2I3I_XbSACNcBGAsYHQ\/s1216\/LQI2C_Menu_Download.png\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" data-original-height=\"753\" data-original-width=\"1216\" height=\"388\" src=\"https:\/\/1.bp.blogspot.com\/-0Xy75AmaWEo\/X1Ya5NmHvWI\/AAAAAAAABOM\/wT-hxIYOGScgRgQvkVD7-jmr2I3I_XbSACNcBGAsYHQ\/w625-h388\/LQI2C_Menu_Download.png\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EДля установки библиотеки в среду Arduino распакуйте содержимое архива в папку Arduino_dir\\libraries\\ и удалите из названия \"-master\".\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EКак подключать\u003C\/h2\u003E\u003Cdiv\u003EБиблиотеки предназначены для работы с дисплеями LCD2004 и LCD1602 с I2C интерфейсом. Для управления потребуются либо энкодер вращения с кнопкой, например, KY-040, либо 3-4 кнопки. Схемы их подключения к Ардуино приведены ниже:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-nSFwvdJ21HY\/XyZt52BI01I\/AAAAAAAABNM\/Isrkk7uCAFwLmbsCPmj55Fig3MlpqN5fwCNcBGAsYHQ\/s1866\/LiquidCrystal_I2C_Menu%2Bwiring.png\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"1026\" data-original-width=\"1866\" height=\"352\" src=\"https:\/\/1.bp.blogspot.com\/-nSFwvdJ21HY\/XyZt52BI01I\/AAAAAAAABNM\/Isrkk7uCAFwLmbsCPmj55Fig3MlpqN5fwCNcBGAsYHQ\/w640-h352\/LiquidCrystal_I2C_Menu%2Bwiring.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСхема подключения дисплея и энкодера к Ардуино для работы с LiquidCrystal_I2C_Menu\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-8c6guQwhCJ8\/XyZt_q-v32I\/AAAAAAAABNQ\/OQR5ztOfC4YYnppH_eVMj1RVDNs36cp2ACNcBGAsYHQ\/s1866\/LiquidCrystal_I2C_Menu_Btns%2Bwiring.png\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"1341\" data-original-width=\"1866\" height=\"460\" src=\"https:\/\/1.bp.blogspot.com\/-8c6guQwhCJ8\/XyZt_q-v32I\/AAAAAAAABNQ\/OQR5ztOfC4YYnppH_eVMj1RVDNs36cp2ACNcBGAsYHQ\/w640-h460\/LiquidCrystal_I2C_Menu_Btns%2Bwiring.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСхема подключения дисплея и кнопок к Ардуино для работы с LiquidCrystal_I2C_Menu_Btns\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВы можете выбрать для подключения любые другие пины Ардуино. Только не забудьте потом прописать их в скетче, чтобы библиотека знала, с какими выводами ей работать.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"text-align: center;\"\u003EДля библиотеки LiquidCrystal_I2C_Menu_Btns достаточно трёх кнопок. Четвертая опциональная, используется для отмены действий и возврата из функций.\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cspan style=\"text-align: center;\"\u003EКак использовать\u003C\/span\u003E\u003C\/h2\u003E\u003Cdiv style=\"text-align: left;\"\u003EОбе библиотеки одинаковы в использовании, за исключением функций подключения и опроса элементов управления (attachEncoder \/ attachButtons и getEncoderState \/ getButtonsState). В остальном они взаимозаменяемы. Помимо унаследованных из\u0026nbsp;\u003Cspan style=\"text-align: center;\"\u003ELiquidCrystal_I2C функций в\u003C\/span\u003E\u0026nbsp;них реализованы следующие:\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cul\u003E\u003Cli\u003E\u003Cb\u003EprintAt(x, y, text)\u003C\/b\u003E\u0026nbsp;– вывод текста на дисплей с указанной позиции.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003Eprintf(format, …)\u003C\/b\u003E\u0026nbsp;– форматированный вывод текста. Лично мне очень не хватало этой функции. Если раньше приходилось делать несколько вызовов print, или выводить текст в промежуточный буфер функцией sprintf, то сейчас достаточно одного вызова printf.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EprintfAt(x, y, format, …)\u003C\/b\u003E\u0026nbsp;– форматированный вывод с указанной позиции.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EattachEncoder(pinA, pinB, pinBtn)\u003C\/b\u003E\u0026nbsp;– сообщает библиотеке, к каким выводам Ардуино подключен энкодер. Только для LiquidCrystal_I2C_Menu.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EgetEncoderState()\u003C\/b\u003E\u0026nbsp;– опрос состояния энкодера. Возвращает значение типа eEncoderState (перечисляемый тип, описан в библиотеке как {eNone, eLeft, eRight, eButton}). Только для LiquidCrystal_I2C_Menu.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EattachButtons(pinLeft, pinRight, pinEnter, [pinBack])\u003C\/b\u003E\u0026nbsp;– сообщает библиотеке, к каким выводам Ардуино подключены кнопки. Только для LiquidCrystal_I2C_Menu_Btns.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EgetButtonsState()\u0026nbsp;\u003C\/b\u003E– опрос состояния кнопок. Возвращает значение типа eButtonsState (перечисляемый тип, описан в библиотеке как {eNone, eLeft, eRight, eButton, eBack}). Только для LiquidCrystal_I2C_Menu_Btns.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EprintMultiline(text)\u003C\/b\u003E\u0026nbsp;– вывод длинного текста с возможностью вертикальной прокрутки. Возврат из функции осуществляется при нажатии кнопки.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputVal(title, min, max, default, [step = 1], [*onChangeFunc = NULL])\u003C\/b\u003E\u0026nbsp;– ввод числового значения. title – заголовок; параметры min и max задают диапазон, в котором может изменяться значение; default – начальное значение; step –\u0026nbsp;величина приращения, по умолчанию равна 1; необязательный параметр onChangeFunc –\u0026nbsp;указатель на функцию, которая должна вызываться при изменении значения.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputValAt(x, y, min, max, default, [step = 1]\u003Cb\u003E,\u0026nbsp;[*onChangeFunc = NULL]\u003C\/b\u003E)\u003C\/b\u003E\u0026nbsp;– аналогична функции inputVal, но в отличие от нее не очищает дисплей при вызове и ввод значения осуществляется с указанной позиции.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputValBitwise(title, value, precision, [scale = 0], [signed = false])\u003C\/b\u003E\u0026nbsp;– позволяет вводить числовые значения путем редактирования отдельных разрядов числа. Параметр title определяет заголовок; value – ссылка на переменную, в которую будет помещен результат ввода; precision – общее количество разрядов в числе; scale –\u0026nbsp;количество разрядов после запятой, значение по умолчанию 0; signed –\u0026nbsp;разрешает (при значении true) или запрещает (при значении false –\u0026nbsp;по умолчанию) ввод отрицательных чисел. Функция возвращает true, если пользователь подтвердил ввод, false, если отказался.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputStrVal(title, buffer, length, available_symbols)\u003C\/b\u003E\u0026nbsp;– аналогично функции inputValBitwise предоставляет возможность поразрядного ввода, но кроме цифр могут быть введены и другие символы. Параметр title определяет заголовок; buffer – ссылка на символьный буфер, в который будет помещен результат ввода; length – количество вводимых символов; параметр available_symbols –\u0026nbsp;это строка символов, доступных для ввода. Функция возвращает true, если пользователь подтвердил ввод, false, если отказался.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EselectVal(title, list_of_values, count, [show_selected = true]\u003Cb\u003E, [selected_index = 0]\u003C\/b\u003E)\u003C\/b\u003E\u0026nbsp;– позволяет выбрать значение из списка list и возвращает индекс выбранного элемента.\u0026nbsp; title – отображаемый на дисплее заголовок; list – список значений для выбора, представляет собой массив значений типа char*, String или int; count – количество элементов в массиве;\u0026nbsp;show_selected - флаг отображения метки на выбранном элементе; selected_index – индекс выбранного по умолчанию элемента.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EshowMenu(menu, menu_length, show_title)\u003C\/b\u003E\u0026nbsp;– отображает меню и возвращает ключ выбранного элемента. menu – массив элементов типа sMenuItem; menu_length – длина меню; show_title – признак необходимости отображения заголовка.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EgetSelectedMenuItem()\u003C\/b\u003E\u0026nbsp;–\u0026nbsp;возвращает ключ выбранного пункта меню для использования внутри обработчиков.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EattachIdleFunc(*IdleFunc)\u003C\/b\u003E\u0026nbsp;–\u0026nbsp;позволяет привязать функцию, которая будет вызываться библиотекой при бездействии.\u003C\/li\u003E\u003C\/ul\u003E\u0026nbsp;Разберём несколько примеров их использования.\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Ch3 style=\"text-align: left;\"\u003EprintAt, printf, printfAt\u003C\/h3\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E hello[] = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Hello, world!\"\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003EString\u003C\/span\u003E s = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"String example\"\u003C\/span\u003E;\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"millis=%lu\"\u003C\/span\u003E, \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Emillis\u003C\/span\u003E());\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E, hello);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2\u003C\/span\u003E, s);\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%s\"\u003C\/span\u003E, s.c_str());\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/h3\u003E\u003Cdiv\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-GURAzvTDiEs\/X1ctY_NNwrI\/AAAAAAAABOk\/r8OZ5S0kA78NGPhtE8TTxViT3CVAsancwCNcBGAsYHQ\/s1024\/printf_example.jpg\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"555\" data-original-width=\"1024\" height=\"338\" src=\"https:\/\/1.bp.blogspot.com\/-GURAzvTDiEs\/X1ctY_NNwrI\/AAAAAAAABOk\/r8OZ5S0kA78NGPhtE8TTxViT3CVAsancwCNcBGAsYHQ\/w625-h338\/printf_example.jpg\" title=\"Функции printf, printfAt библиотеки LiquidCrystal_I2C_Menu\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EРезультат работы функций\u0026nbsp;printAt, printf, printfAt\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cspan style=\"font-weight: normal;\"\u003EФункция printAt поддерживает те же типы данных, что и print: вы можете выводить на дисплей целые и дробные числа, текстовые строки, будь то массив символов или переменная типа String. А при работе с функциями форматированного вывода printf и printfAt не забывайте, что они не поддерживают тип String и передавать им нужно указатель на строку в стиле Си. Для этого достаточно вызвать функцию c_str() класса String, в примере выше это показано.\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003E\u003Cb\u003EattachEncoder, getEncoderState и\u0026nbsp;\u003C\/b\u003E\u003Cb\u003EattachButtons,\u0026nbsp;\u003C\/b\u003E\u003Cb\u003EgetButtonsState\u003C\/b\u003E\u003C\/h3\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eint\u003C\/span\u003E x = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%d \"\u003C\/span\u003E, x);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Опрашиваем энкодер\u003C\/span\u003E\u003Cbr \/\u003E  eEncoderState EncoderState = lcd.getEncoderState();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eswitch\u003C\/span\u003E (EncoderState) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eLeft:   \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ При вращении влево уменьшаем значение переменной\u003C\/span\u003E\u003Cbr \/\u003E      x--;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eRight:  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ При вращении вправо увеличиваем значение переменной\u003C\/span\u003E\u003Cbr \/\u003E      x++;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eButton: \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ При нажатии кнопки энкодера обнуляем значение переменной\u003C\/span\u003E\u003Cbr \/\u003E      x = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eNone:   \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Энкодер не вращается, кнопка не нажата. Выходим из функции\u003C\/span\u003E\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E  }\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%d \"\u003C\/span\u003E, x); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Покажем новое значение x\u003C\/span\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv\u003EВ данном примере выполняется подключение энкодера функцией attachEncoder и опрос его состояния в цикле. При вращении энкодера изменяется значение переменной x, затем выводится на дисплей. Нажатие на кнопку приводит к обнулению переменной.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EАналогичный пример для библиотеки LiquidCrystal_I2C_Menu_Btns вы найдете в папке \\examples\\Buttons. Отличие состоит в использовании функций attachButtons и getButtonsState. Последняя возвращает значение типа eButtonsState, которое определено в библиотеке следующим образом:\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eenum\u003C\/span\u003E eButtonsState {eNone, eLeft, eRight, eButton, eBack};\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003EЭто те же значения, что используются при работе с энкодером, плюс новое значение eBack для кнопки \"Назад\". Подключать эту кнопку необязательно, то есть функция attachButtons может быть вызвана с тремя параметрами:\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003Elcd.attachButtons(pinLeft, pinRight, pinEnter);\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003E\u003Cb\u003EprintMultiline\u003C\/b\u003E\u003C\/h3\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;avr\/pgmspace.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Объявим две строки в памяти программ. Так они не будут занимать оперативную память\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E text_1[] PROGMEM = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Using PROGMEM example\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E text_2[] PROGMEM = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"This text is stored in FLASH\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E* \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Etext\u003C\/span\u003E[] PROGMEM = {text_1, text_2};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E    lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E *\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Вывод на экран длинной строки. Строка занимает оперативную память.\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Вывод строки из памяти программ.\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E = (\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E*) malloc(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E30\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Буфер для временного хранения строки\u003C\/span\u003E\u003Cbr \/\u003E  strcpy_P(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E, (\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E*)pgm_read_word(\u0026amp;(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Etext\u003C\/span\u003E[\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E]))); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Копируем строку в буфер\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Выводим содержимое буфера на экран\u003C\/span\u003E\u003Cbr \/\u003E  strcpy_P(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E, (\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E*)pgm_read_word(\u0026amp;(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Etext\u003C\/span\u003E[\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E]))); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Аналогично со второй строкой\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E);\u003Cbr \/\u003E  free(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Освобождаем буфер\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Другой пример хранения строк в памяти программ - использование макроса F().\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(F(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Using F() macro example. Press button to continue.\"\u003C\/span\u003E));\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-Io20BjSx8bw\/X1cto4A67pI\/AAAAAAAABOs\/-jf0m6mLiE8V8COWAQ-ZOhX1dD1tu1JLQCNcBGAsYHQ\/s1024\/printMultiline_example.jpg\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"555\" data-original-width=\"1024\" height=\"338\" src=\"https:\/\/1.bp.blogspot.com\/-Io20BjSx8bw\/X1cto4A67pI\/AAAAAAAABOs\/-jf0m6mLiE8V8COWAQ-ZOhX1dD1tu1JLQCNcBGAsYHQ\/w625-h338\/printMultiline_example.jpg\" title=\"Функция printMultiline библиотеки LiquidCrystal_I2C_Menu\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EРезультат работы функции printMultiline\u003Cbr \/\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФункция printMultiline позволяет выводить на дисплей длинные строки с возможностью прокрутки. Но, объявив несколько таких строк в своем скетче, при компиляции вы можете заметить, как быстро они \"съедают\" память данных. В\u0026nbsp;Ардуино Уно для хранения данных доступно всего 2кб, тогда как для кода программы отведено 32кб. Поэтому при наличии в программе большого объема текстовых данных целесообразно хранить их в памяти программ (FLASH). Для этого используется ключевое слово PROGMEM.\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EPROGMEM – это модификатор переменных, он сообщает компилятору, что указанная переменная должна быть размещена не в памяти данных, а в памяти программ. Работает этот модификатор только с типами данных, объявленными в файле pgmspace.h, частью которой он является. Чтобы впоследствии процессор мог что-то сделать с этими данными, они должны быть скопированы из FLASH в SRAM. Для этого в примере выше выделяется буфер, в который происходит считывание строк text[0] и text[1]. После того как данные выведены на дисплей буфер может быть освобожден.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EЕще один вариант размещения строки в памяти программ – это использование макроса F() непосредственно в функции printMultiline. В примере это также показано.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EinputVal, inputValAt\u003C\/h3\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Для примера запросим длину массива\u003C\/span\u003E\u003Cbr \/\u003E  uint8_t len = lcd.inputVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input array len\"\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E8\u003C\/span\u003E);\u003Cbr \/\u003E  uint8_t A[len];\u003Cbr \/\u003E  uint8_t t;\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Затем элементы массива\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E; i \u0026lt; len; i++) {\u003Cbr \/\u003E    lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input A[%d]: \"\u003C\/span\u003E, i); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Приглашение для ввода\u003C\/span\u003E\u003Cbr \/\u003E    A[i] = lcd.inputValAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E12\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E9\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E);  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Ввод значения\u003C\/span\u003E\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Отсортируем массив\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E; i \u0026lt; len - \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E; i++) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t j = i + \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E; j \u0026lt; len; j++) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E(A[i] \u0026gt; A[j]){\u003Cbr \/\u003E        t = A[i];\u003Cbr \/\u003E        A[i] = A[j];\u003Cbr \/\u003E        A[j] = t;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ И выведем на дисплей\u003C\/span\u003E\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Sorted array:\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E; i \u0026lt; len; i++)\u003Cbr \/\u003E    lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%d \"\u003C\/span\u003E, A[i]);\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Ожидаем нажатия кнопки для продолжения\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() == eNone);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-lnZHCtR84Cw\/X1cuCsZ6VAI\/AAAAAAAABO0\/ASdu77IyTGojZgQM0BaGXR9G6lNL0NXMQCNcBGAsYHQ\/s1024\/inputValAt_example.jpg\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"555\" data-original-width=\"1024\" height=\"338\" src=\"https:\/\/1.bp.blogspot.com\/-lnZHCtR84Cw\/X1cuCsZ6VAI\/AAAAAAAABO0\/ASdu77IyTGojZgQM0BaGXR9G6lNL0NXMQCNcBGAsYHQ\/w625-h338\/inputValAt_example.jpg\" title=\"Функции inputVal и inputValAt библиотеки LiquidCrystal_I2C_Menu\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EИспользование функций printfAt и inputValAt для ввода значений\u003Cbr \/\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EДля демонстрации использования функций inputVal и inputValAt в данном примере предлагается ввести длину массива, а затем элементы массива. Введенный массив сортируется и выводится на дисплей. Отличие этих двух функций состоит в том, что inputValAt при вызове не очищает дисплей и позволяет предварительно вывести на дисплей заголовок, используя printf. В скетче выше это используется для отображения индекса вводимого элемента массива.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВ некоторых случаях необходимо знать значение переменной в процессе её редактирования, а не по завершении редактирования. Это позволило бы оперативно применять новое значение. Тогда, например, при изменении громкости мы сможем не только видеть её новое значение на дисплее, но и воспринимать изменение на слух. Для таких случаев в функциях inputVal и inputValAt предусмотрен параметр onChangeFunc. В нём передаётся указатель на функцию, которая должна вызываться при каждом изменении редактируемого параметра. Внутри такой функции можно применить новое значение параметра или даже визуализировать его ввод: отобразить шкалу как в примере ниже.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-F4srbCBwqeI\/X8Nf3RFpdhI\/AAAAAAAABU0\/YMH_maBOjEgMoy06Fjoct5XpOmCfkOZsQCNcBGAsYHQ\/s800\/inputVal_onChange.gif\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"434\" data-original-width=\"800\" height=\"347\" src=\"https:\/\/1.bp.blogspot.com\/-F4srbCBwqeI\/X8Nf3RFpdhI\/AAAAAAAABU0\/YMH_maBOjEgMoy06Fjoct5XpOmCfkOZsQCNcBGAsYHQ\/w640-h347\/inputVal_onChange.gif\" title=\"Визуализация ввода для функций inputVal и inputValAt библиотеки LiquidCrystal_I2C_Menu\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EШкала ввода для функций inputVal и inputValAt\u003Cbr \/\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cdiv\u003EВ примерах к библиотеке есть скетч\u0026nbsp;inputVal_onChange, поясняющий использование параметра onChangeFunc.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EinputValBitwise\u003C\/h3\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Edouble\u003C\/span\u003E val = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Ввод 5-значного числа со знаком, 2 цифры после запятой:\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (lcd.inputValBitwise(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input value\"\u003C\/span\u003E, val, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2\u003C\/span\u003E, true)) {\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"You entered: \"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(val);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input canceled\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() == eNone);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cp\u003E\u003Cbr \/\u003E\u003C\/p\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-8iQKszZh4ig\/X1cumkwY7UI\/AAAAAAAABO8\/vgAI_-lbHVQd-JuwCrnNM8gV75diC5snACNcBGAsYHQ\/s1024\/inputValBitwise_example.jpg\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"555\" data-original-width=\"1024\" height=\"338\" src=\"https:\/\/1.bp.blogspot.com\/-8iQKszZh4ig\/X1cumkwY7UI\/AAAAAAAABO8\/vgAI_-lbHVQd-JuwCrnNM8gV75diC5snACNcBGAsYHQ\/w625-h338\/inputValBitwise_example.jpg\" title=\"Функция поразрядного ввода inputValBitwise библиотеки LiquidCrystal_I2C_Menu\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПример использования функции\u0026nbsp;inputValBitwise для поразрядного ввода чисел\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cp\u003E\u003Cbr \/\u003E\u003C\/p\u003E\u003Cp\u003EПараметры, с которыми вызывается функция inputValBitwise в данном скетче, определяют ввод пятиразрядного числа со знаком, два младших разряда отведены для дробной части. При подтверждении ввода функция возвращает true и помещает введённое значение в переменную val.\u003C\/p\u003E\u003Cp\u003EЕщё несколько примеров ввода чисел функциями inputVal и inputValBitwise вы найдёте в скетче Input_double_and_long.\u003C\/p\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EinputStrVal\u003C\/h3\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E ip[] = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"192.168.001.001\"\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Массив символов с начальным значением\/маской\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (lcd.inputStrVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input IP\"\u003C\/span\u003E, ip, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E15\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"0123456789\"\u003C\/span\u003E)){\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"You entered:\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E, ip);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input canceled\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() == eNone);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-F-Jgo04Sf38\/X1cvHK7kWwI\/AAAAAAAABPE\/uHma76GiajgUOiEp0fJ0XdE1BmLi3JrvACNcBGAsYHQ\/s1024\/inputStrVal.jpg\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"555\" data-original-width=\"1024\" height=\"338\" src=\"https:\/\/1.bp.blogspot.com\/-F-Jgo04Sf38\/X1cvHK7kWwI\/AAAAAAAABPE\/uHma76GiajgUOiEp0fJ0XdE1BmLi3JrvACNcBGAsYHQ\/w625-h338\/inputStrVal.jpg\" title=\"Функция inputStrVal библиотеки LiquidCrystal_I2C_Menu\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПример использования функции inputStrVal для маскированного ввода\u003Cbr \/\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EЗдесь функция inputStrVal используется для ввода IP адреса. При вызове функции содержимое переданного буфера рассматривается как значение по умолчанию и выводится на дисплей. Последний параметр функции определяет разрешенные для ввода символы, в данном случае только цифры. Если буфер содержит символы, которые не могут быть введены, то их не удастся изменить. Таким способом можно реализовать маскированный ввод или, например, показать единицу измерения для вводимого значения.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EselectVal\u003C\/h3\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eint\u003C\/span\u003E index = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003EString\u003C\/span\u003E list[] = {\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Europa+\"\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Record\"\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"DFM\"\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Retro FM\"\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Energy\"\u003C\/span\u003E};\u003Cbr \/\u003E  index = lcd.selectVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Select station\"\u003C\/span\u003E, list, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E, true, index);\u003Cbr \/\u003E  lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%s selected\"\u003C\/span\u003E, list[index].c_str());\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() == eNone);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-Wku5wSRDY3c\/X1cvjBG9I1I\/AAAAAAAABPM\/dEdKRXtzdP0LooDfwaTmde8Rew-aI4ABgCNcBGAsYHQ\/s1024\/selectVal_example.jpg\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"555\" data-original-width=\"1024\" height=\"338\" src=\"https:\/\/1.bp.blogspot.com\/-Wku5wSRDY3c\/X1cvjBG9I1I\/AAAAAAAABPM\/dEdKRXtzdP0LooDfwaTmde8Rew-aI4ABgCNcBGAsYHQ\/w625-h338\/selectVal_example.jpg\" title=\"Функция выбора значения selectVal библиотеки LiquidCrystal_I2C_Menu\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПример работы функции selectVal\u003Cbr \/\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФункция selectVal используется для выбора значения из списка. Она работает с массивами значений типа char*, String или int и возвращает индекс выбранного элемента. Последние два параметра функции необязательны, это show_selected - определяет, должно ли визуально выделяться выбранное значение (по умолчанию true) и\u0026nbsp; preselected - задаёт индекс выбранного элемента (по умолчанию -1 - ничего не выбрано).\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003E\u003Cb\u003EshowMenu\u003C\/b\u003E\u003C\/h3\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Объявим перечисление, используемое в качестве ключа пунктов меню\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eenum\u003C\/span\u003E {mkBack, mkRoot, mkRun, mkOptions, mkMode, mkSpeed, mkLog, mkSelftest, mkHelp, mkFAQ, mkIndex, mkAbout};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Описание меню\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ структура пункта меню: {ParentKey, Key, Caption, [Handler]}\u003C\/span\u003E\u003Cbr \/\u003EsMenuItem menu[] = {\u003Cbr \/\u003E  {mkBack, mkRoot, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Menu demo\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkRun, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Run\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkOptions, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Options\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkMode, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Mode\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkSpeed, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Speed\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkLog, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Print log\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkSelftest, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Selftest\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Back\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkHelp, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Help\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkFAQ, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"FAQ\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkIndex, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Index\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkAbout, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"About\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Back\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Exit menu\"\u003C\/span\u003E}\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003Euint8_t menuLen = \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Esizeof\u003C\/span\u003E(menu) \/ \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Esizeof\u003C\/span\u003E(sMenuItem);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Показываем меню\u003C\/span\u003E\u003Cbr \/\u003E  uint8_t selectedMenuItem = lcd.showMenu(menu, menuLen, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ И выполняем действия в соответствии с выбранным пунктом\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkRun)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Run selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkMode)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Mode selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkSpeed)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Speed selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkLog)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Print log selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkSelftest)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Selftest selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkFAQ)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"FAQ selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkIndex)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Index selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkAbout)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"About selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkBack)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Exit selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2000\u003C\/span\u003E);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cp\u003E\u003Cbr \/\u003E\u003C\/p\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-u4zw1qO9Vis\/X1cv8mkVauI\/AAAAAAAABPY\/WrexiCPfIrYnPjpZgbfMIBh2YsbP5onDwCNcBGAsYHQ\/s1024\/showMenu_example.jpg\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"555\" data-original-width=\"1024\" height=\"338\" src=\"https:\/\/1.bp.blogspot.com\/-u4zw1qO9Vis\/X1cv8mkVauI\/AAAAAAAABPY\/WrexiCPfIrYnPjpZgbfMIBh2YsbP5onDwCNcBGAsYHQ\/w625-h338\/showMenu_example.jpg\" title=\"Меню на Ардуино и LCD дисплее\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПример меню, построенного функцией showMenu\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cp\u003EФункция showMenu берёт на себя отрисовку меню и навигацию по нему. Входными параметрами функции являются массив элементов типа sMenuItem (это и есть наше меню), длина массива и признак отображения заголовка в меню. В качестве заголовка используется название родительского пункта меню. Отключение отображения заголовка полезно при использовании дисплея 1602.\u003C\/p\u003E\u003Cp\u003EИтак, меню - это массив элементов sMenuItem. Данная структура определёна в библиотеке следующим образом:\u003C\/p\u003E\u003Cp\u003E\u003C\/p\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Estruct\u003C\/span\u003E sMenuItem {\u003Cbr \/\u003E  uint8_t parent;\u003Cbr \/\u003E  uint8_t key;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E    *caption;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E    (*handler)();\u003Cbr \/\u003E};\u003C\/pre\u003E\u003Cp\u003E\u003C\/p\u003E\u003Cp\u003EПараметры parent и key служат для задания иерархии, caption – указатель на название элемента меню, handler - указатель на функцию, которая будет вызываться при выборе данного пункта меню. Будем называть такие функции обработчиками.\u003C\/p\u003E\u003Cp\u003EВ качестве parent и key могут быть использованы целочисленные значения, начиная с 1. Но гораздо удобнее определить для них символьные имена, то есть работать с перечислением. Обратите внимание на то, что первым в перечислении должно быть определено значение mkBack, ему соответствует значение 0. Данное значение является служебным и используется для пунктов меню, отвечающих за возврат на уровень выше.\u003C\/p\u003E\u003Cp\u003EПри выборе пункта меню, не имеющего подменю и обработчика, функция возвращает соответствующее ему значение key. После этого остаётся проанализировать вернувшееся значение при помощи if или case и выполнить соответствующее выбранному элементу действие.\u003C\/p\u003E\u003Cp\u003EЕсли же для выбранного пункта меню задан обработчик, то он будет вызван, после чего управление вернётся в меню.\u003C\/p\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EgetSelectedMenuItem и использование обработчиков меню\u003C\/h3\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eint\u003C\/span\u003E brightness = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E50\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eint\u003C\/span\u003E _delay = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E10\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Обработчики пунктов меню SetBrightness и SetDelay\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Используются для ввода значений brightness и _delay\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E SetBrightness() {\u003Cbr \/\u003E  brightness = lcd.inputVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input brightness(%)\"\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E100\u003C\/span\u003E, brightness, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E SetDelay() {\u003Cbr \/\u003E  _delay = lcd.inputVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input delay(ms)\"\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, _delay);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Объявим перечисление, используемое в качестве ключа пунктов меню\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eenum\u003C\/span\u003E {mkBack, mkRoot, mkOptions, mkSetBrightness, mkSetDelay};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Описание меню\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ структура пункта меню: {ParentKey, Key, Caption, [Handler]}\u003C\/span\u003E\u003Cbr \/\u003EsMenuItem menu[] = {\u003Cbr \/\u003E  {mkBack, mkRoot, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Main menu\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E  {mkRoot, mkOptions, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Options\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E  {mkOptions, mkSetBrightness, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"SetBrightness\"\u003C\/span\u003E, SetBrightness},\u003Cbr \/\u003E  {mkOptions, mkSetDelay, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"SetDelay\"\u003C\/span\u003E, SetDelay},\u003Cbr \/\u003E  {mkOptions, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E  {mkRoot, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Back\"\u003C\/span\u003E, NULL}\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003Euint8_t menuLen = \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Esizeof\u003C\/span\u003E(menu) \/ \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Esizeof\u003C\/span\u003E(sMenuItem);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  uint8_t selectedMenuItem = lcd.showMenu(menu, menuLen, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Вызываем меню\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/* Реакция на выбор пунктов меню SetBrightness и SetDelay реализована\u003Cbr \/\u003E   * в функциях-обработчиках.\u003Cbr \/\u003E   * При необходимости здесь может располагаться анализ значения selectedMenuItem \u003Cbr \/\u003E   * для пунктов, не имеющих обработчиков:\u003Cbr \/\u003E     if (selectedMenuItem == ...) {...}\u003Cbr \/\u003E  *\/\u003C\/span\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv\u003EВ этом примере для двух пунктов меню заданы функции-обработчики SetBrightness и SetDelay. Они не имеют параметров и ничего не возвращают - это обязательное требование к обработчикам. Обработчики вызываются прямо из функции showMenu, то есть она не завершается и не возвращает ключ выбранного пункта меню. Внутри обработчиков можно как угодно работать с дисплеем, перерисовывать его и вызывать функции библиотеки, после завершения обработчика меню будет восстановлено.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EОдин обработчик можно привязать сразу к нескольким пунктам меню. В этом случае, чтобы понять, какой пункт был выбран, используется функция getSelectedMenuItem. Она возвращает ключ выбранного пункта. Далее ключ нужно проанализировать и выполнить соответствующий код.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EattachIdleFunc\u003C\/h3\u003E\u003Cdiv\u003E\u003Cdiv\u003EПри вызове большинства функций библиотеки ожидается действие от пользователя: выбор пункта в меню, ввод значения и так далее. При этом мы по сути находимся в цикле и выполнение остальной части программы невозможно, пока мы не выйдем из этого цикла. Это логично. Но возможны случаи, когда такая логика работы не подходит. Например, если нам нужно опрашивать какие-либо датчики даже во время работы меню. В таких случаях поможет функция attachIdleFunc. Она позволяет указать функцию, которую будет вызывать библиотека снова и снова, пока мы находимся в меню, вводим или выбираем значения. А уже внутри этой самой функции можно сделать опрос датчиков или что угодно, что не будет долго выполняться, чтобы не мешать библиотеке опрашивать кнопки и энкодер.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EДля демонстрации описанного функционала в приведённом ниже примере включается и выключается встроенный светодиод Ардуино, пока мы находимся внутри функций inputVal и printMultiline.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Пины, к которым подключен энкодер\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Elong\u003C\/span\u003E tm = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Ebool\u003C\/span\u003E ledState = false;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Данная функция будет вызываться из библиотеки при бездействии\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E myIdleFunc() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Emillis\u003C\/span\u003E() - tm \u0026gt;= \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E500\u003C\/span\u003E) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Включаем и выключаем встроенный светодиод на Ардуино\u003C\/span\u003E\u003Cbr \/\u003E    tm = \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Emillis\u003C\/span\u003E();\u003Cbr \/\u003E    ledState = !ledState;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003EdigitalWrite\u003C\/span\u003E(\u003Cspan class=\"hljs-literal\" style=\"color: #d35400;\"\u003ELED_BUILTIN\u003C\/span\u003E, ledState);\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E  lcd.attachIdleFunc(myIdleFunc);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003EpinMode\u003C\/span\u003E(\u003Cspan class=\"hljs-literal\" style=\"color: #d35400;\"\u003ELED_BUILTIN\u003C\/span\u003E, \u003Cspan class=\"hljs-literal\" style=\"color: #d35400;\"\u003EOUTPUT\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Press the button\"\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eint\u003C\/span\u003E x = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  myIdleFunc();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (lcd.getEncoderState() == eButton) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Для проверки вызовем любую функцию библиотеки,\u003C\/span\u003E\u003Cbr \/\u003E    \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ которая ожидает действий от пользователя:\u003C\/span\u003E\u003Cbr \/\u003E    x = lcd.inputVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input some val\"\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E100\u003C\/span\u003E, x);\u003Cbr \/\u003E    lcd.printMultiline(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Some text here\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Press the button\"\u003C\/span\u003E);\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EИзначально myIdleFunc вызывается внутри функции loop, в результате светодиод мигает. При нажатии на кнопку энкодера происходит вызов функций библиотеки, выполнение loop приостанавливается. Тем не менее светодиод продолжает мигать, поскольку myIdleFunc вызывается библиотекой. И работе функций inputVal и printMultiline это не мешает.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EИзменение названий пунктов меню\u003C\/h2\u003E\u003Cdiv\u003EЕщё один приём, который я хочу показать, это изменение названий пунктов меню в ходе работы программы. Может пригодиться для отображения значений переменных в пунктах меню. В библиотеках есть примеры таких скетчей: Updating_menu_captions и Menu_for_setting_params.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-uUaQSLEEjU8\/X1cy_Ic-g6I\/AAAAAAAABPk\/xq0ZY2OQB0okzlSPn7xLy3gmNYF8Kl76gCNcBGAsYHQ\/s800\/Updating_menu_captions.gif\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" data-original-height=\"434\" data-original-width=\"800\" height=\"341\" src=\"https:\/\/1.bp.blogspot.com\/-uUaQSLEEjU8\/X1cy_Ic-g6I\/AAAAAAAABPk\/xq0ZY2OQB0okzlSPn7xLy3gmNYF8Kl76gCNcBGAsYHQ\/w625-h341\/Updating_menu_captions.gif\" title=\"Отображение значений в пунктах меню\" width=\"625\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПример изменения названий пунктов меню\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EПоддержка дисплеев с кириллицей\u003C\/h2\u003E\u003Cdiv\u003EЕсли ваш дисплей поддерживает кириллицу, то для корректного отображения русского текста необходимо включить её поддержку в самой библиотеке. Для этого в заголовочном файле (LiquidCrystal_I2C_Menu.h или LiquidCrystal_I2C_Menu_Btns.h) найдите и раскомментируйте строку:\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E CYRILLIC_DISPLAY\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003EПосле этого сохраните внесённые изменения. Теперь русские буквы могут быть использованы в меню и других функциях библиотеки. Не забывайте, что для хранения одной русской буквы используется два байта, а не один. Поэтому для строки из N русских букв следует выделять N * 2 + 1 байт памяти.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EКроме того, при включении поддержки кириллицы вам станут доступны следующие функции:\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003Euint8_t strlenUTF8(\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E *s)\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E substrUTF8(\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E* source, \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E* dest, uint8_t fromPos, uint8_t count)\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EФункция strlenUTF8 возвращает длину строки s в символах (а не байтах, в отличие от функции strlen). Функция substrUTF8 копирует подстроку из строки source, начиная с символа fromPos, длиной count символов (опять же символов, а не байтов) в строку dest. Эти функции не являются методами классов LiquidCrystal_I2C_Menu \/ LiquidCrystal_I2C_Menu_Btns и вызываются \"напрямую\", без указания имени экземпляра класса, например:\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em; text-align: left;\"\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Menu.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Menu lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E myText[] = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Привет, мир!\"\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E mySubstr[\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E21\u003C\/span\u003E];\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(strlenUTF8(myText)); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Напечатает \"12\"\u003C\/span\u003E\u003Cbr \/\u003E  substrUTF8(myText, mySubstr, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E8\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E, mySubstr);   \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Напечатает \"мир\"\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EДругие параметры\u003C\/h2\u003E\u003Cdiv\u003EКроме упомянутого выше CYRILLIC_DISPLAY заголовочные файлы библиотек содержат и другие параметры, которые могут быть изменены. Рассмотрим их.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E SCROLL_LONG_CAPTIONS\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E- Данный параметр включает прокрутку длинных пунктов меню. Если такая возможность не нужна, просто закомментируйте данную строку. Это позволит немного уменьшить размер скомпилированного кода. Если же прокрутка нужна, то обратите внимание на временные интервалы данной функции:\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E SCROLL_DELAY        800  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Задержка прокрутки\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E DELAY_BEFORE_SCROLL 4000 \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Задержка перед началом прокрутки\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E DELAY_AFTER_SCROLL  2000 \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Задержка после вывода всей строки\u003C\/span\u003E\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E- Они определяют скорость прокрутки и задержки перед её началом и в конце.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E ENCODER_POOL_DELAY 5\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E- Интервал опроса энкодера (только для библиотеки LiquidCrystal_I2C_Menu). Я всегда использую 5мс. Может быть кому-то понадобится установить другое значение\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E BUTTONS_POOL_DELAY 50\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E BUTTONS_HOLD_BEFORE_REPEAT 1000\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E- Определяют интервал опроса кнопок и задержку при удержании кнопки нажатой (только для библиотеки LiquidCrystal_I2C_Menu_Btns). По истечении интервала BUTTONS_HOLD_BEFORE_REPEAT нажатая кнопка будет читаться как повторно нажатая каждые\u0026nbsp;BUTTONS_POOL_DELAY мс до тех пор, пока она не будет отпущена.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EВместо заключения\u003C\/h2\u003E\u003Cdiv\u003EПри создании данных библиотек была проделана большая работа. Поэтому, надеюсь, вы оцените результат. Если возникнут вопросы по их использованию - пишите в комментариях, постараюсь на них ответить.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/7998652808377710845\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2020\/09\/LiquidCrystal-I2C-Menu.html#comment-form","title":"Комментарии: 100"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/7998652808377710845"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/7998652808377710845"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2020\/09\/LiquidCrystal-I2C-Menu.html","title":"LiquidCrystal_I2C_Menu - библиотека для создания меню на ЖК дисплее и Ардуино. Новые возможности"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-5fQl2ZwaFwQ\/X1dlNilTOSI\/AAAAAAAABPw\/fTG-ielgYIMVvhWUbCqtUiZJ_nUaPEDEQCNcBGAsYHQ\/s72-w400-h206-c\/LCI2C_Menu.jpg","height":"72","width":"72"},"thr$total":{"$t":"100"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4390016895923810112"},"published":{"$t":"2019-11-08T11:29:00.003+03:00"},"updated":{"$t":"2020-01-21T19:10:30.789+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"RDA5807M"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Радио на RDA5807M. Часть 1"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-QPphE8A9DMs\/XbFw6G_Y_pI\/AAAAAAAAA-4\/k8eezPUmeNwBTs-iSMFOc2FxoyfvE7SAgCK4BGAYYCw\/s1600\/RRD102v2.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"RDA5807M Arduino\" border=\"0\" height=\"347\" src=\"https:\/\/4.bp.blogspot.com\/-QPphE8A9DMs\/XbFw6G_Y_pI\/AAAAAAAAA-4\/k8eezPUmeNwBTs-iSMFOc2FxoyfvE7SAgCK4BGAYYCw\/s400\/RRD102v2.jpg\" title=\"\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EМикросхема RDA5807M - это FM радиоприемник нового поколения с поддержкой RDS\/RBDS и цифровым управлением по I2C. Микросхема выполнена по CMOS технологии, что определяет ее минимальное энергопотребление. RDA5807M уже содержит все необходимые узлы и требует лишь небольшого числа внешних компонентов. А мощный аудиопроцессор обеспечивает оптимальное качество звука при различных условиях приема. Все это делает RDA5807M удачным выбором для носимых, портативных устройств.\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EВ интернет магазинах распространен модуль RRD-102v2, на котором распаяны RDA5807M, кварцевый резонатор и пара компонентов обвязки. В данной статье я опишу как подключить этот модуль к Ардуино и что нужно знать для создания радиоприемника на его основе.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EХарактеристики RDA5807M\u003C\/h2\u003EСразу даю ссылку на даташит: \u003Ca href=\"https:\/\/drive.google.com\/open?id=12CnuAHVu1wTB-V42NQR3Zv26j4IddbN_\" target=\"_blank\"\u003ERDA5807M_datasheet_v1.1\u003C\/a\u003E, наиболее полную информацию о характеристиках RDA5807M вы можете найти в нем. Я перечислю некоторые из них:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EНапряжение питания 2.7 - 3.3В\u003C\/li\u003E\u003Cli\u003EПотребляемый ток (при напряжении питания 3В):\u003C\/li\u003E\u003Cul\u003E\u003Cli\u003Eв рабочем режиме - не более 20мА\u003C\/li\u003E\u003Cli\u003Eв режиме сна - не более 15мкА\u003C\/li\u003E\u003C\/ul\u003E\u003Cli\u003EДиапазон принимаемых частот 50 - 115МГц\u003C\/li\u003E\u003Cli\u003EВыбираемый шаг изменения частоты: 200кГц, 100кГц, 50кГц, 25кГц\u003C\/li\u003E\u003Cli\u003EВыбираемый источник тактового сигнала: внешний или внутренний генератор (для внутреннего генератора требуется резонатор 32.768кГц)\u003C\/li\u003E\u003Cli\u003EПоддержка RDS\/RBDS\u003C\/li\u003E\u003Cli\u003EУправление по шине I2C\u003C\/li\u003E\u003Cli\u003EВозможность прямого подключения нагрузки от 32Ом\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EДиапазон напряжения питания не самый удобный, например, от лития без стабилизации запитать не получится. Зато наушники можно подключать прямо к выводам микросхемы, дополнительное усиление не требуется. Также можно отметить небольшой потребляемый ток микросхемы, что позволяет запитывать ее от цифрового вывода микроконтроллера (по крайней мере AVR) в тех случаях, когда требуется отключение питания радио в целях энергосбережения.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EРаспиновка и подключение к Ардуино\u003C\/h2\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-HfinANqgXvY\/XbnIcN8WzzI\/AAAAAAAAA_U\/WOKHzC8I9iEbpjyOc_SRg0k5zCxTXLr4QCK4BGAYYCw\/s1600\/RRD102v2%2BRDA5807M%2Bpinout.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"RRD-102v2 (RDA5807M) pinout\" border=\"0\" height=\"329\" src=\"https:\/\/2.bp.blogspot.com\/-HfinANqgXvY\/XbnIcN8WzzI\/AAAAAAAAA_U\/WOKHzC8I9iEbpjyOc_SRg0k5zCxTXLr4QCK4BGAYYCw\/s640\/RRD102v2%2BRDA5807M%2Bpinout.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EРаспиновка RRD-102v2\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-kg_3jO7-q9M\/XbnbxplvFkI\/AAAAAAAAA_g\/r65OZlHkgyggO_1QM6KMrKjwvyq0MvHcQCK4BGAYYCw\/s1600\/RDA5807M%2BArduino.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"RRD-102v2 (RDA5807M) подключение к Arduino\" border=\"0\" height=\"320\" src=\"https:\/\/1.bp.blogspot.com\/-kg_3jO7-q9M\/XbnbxplvFkI\/AAAAAAAAA_g\/r65OZlHkgyggO_1QM6KMrKjwvyq0MvHcQCK4BGAYYCw\/s640\/RDA5807M%2BArduino.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПодключение RRD-102v2 (RDA5807M) к Ардуино\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EВыводы SDA и SCL модуля подключаются к одноименным выводам Ардуино. Для платы Uno это пины A4 и A5 соответственно. Их уровни превышают напряжение питания RDA5807M, но это не критично, микросхема отлично работает без преобразователя уровней. Питание берем с вывода 3v3.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EИнтерфейс управления\u003C\/h2\u003EЗдесь я хочу обратить внимание на имеющуюся в технической документации неточность (даташит на эту микросхему вообще очень мутный): в ней говорится, что I2C адрес микросхемы 0x10h, что внутренние адреса ее регистров не видны и что чтение и запись выполняются последовательно, начиная с фиксированного стартового адреса (0x0Ah для чтения, 0x02h для записи). После каждой операции чтения\/записи происходит инкремент внутреннего счетчика и очередная операция будет выполняться уже для следующего регистра. Так до тех пор, пока внутренний счетчик не дойдет до верхней границы 0x3Ah, после этого он вернется к своему начальному значению.\u003Cbr \/\u003E\u003Cbr \/\u003EНа самом деле RDA5807M отзывается на три I2C адреса, в чем легко убедиться, воспользовавшись \u003Ca href=\"https:\/\/gist.github.com\/tfeldmann\/5411375\" target=\"_blank\"\u003EI2C сканером\u003C\/a\u003E:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-_X3xb2y-FH8\/XaQekTvDJRI\/AAAAAAAAA9s\/rGqlp_SKhh0uj6bpEm8RWjfd_h0pWeAmwCK4BGAYYCw\/s1600\/RDA5807_I2C_Addr.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"I2C адреса микросхемы RDA5807M\" border=\"0\" height=\"292\" src=\"https:\/\/3.bp.blogspot.com\/-_X3xb2y-FH8\/XaQekTvDJRI\/AAAAAAAAA9s\/rGqlp_SKhh0uj6bpEm8RWjfd_h0pWeAmwCK4BGAYYCw\/s640\/RDA5807_I2C_Addr.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EI2C адреса RDA5807M\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cb\u003EАдрес 0x10h\u003C\/b\u003E используется для последовательного обращения к регистрам, как было описано выше.\u003Cbr \/\u003E\u003Cb\u003EАдрес 0x11h\u003C\/b\u003E позволяет обращаться к произвольным регистрам.\u003Cbr \/\u003E\u003Cb\u003EАдрес 0x60h\u0026nbsp;\u003C\/b\u003Eпозволяет работать с RDA5807M в режиме совместимости с TEA5767.\u003Cbr \/\u003E\u003Cbr \/\u003EУпоминание адреса 0x11h можно найти в документе \u003Ca href=\"https:\/\/drive.google.com\/open?id=1XeAi9vhwDasjLHQV-AXKCNmdTF7kFkHd\" target=\"_blank\"\u003ERDA5807P_ProgManual_1.0\u003C\/a\u003E. Хоть он и предназначен для другой микросхемы, но практически всё применимо и для RDA5807M. Ниже приведен фрагмент из данного документа, описывающий формат I2C обмена при использовании адреса 0x11h:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-rbQHE-nFCIA\/XaSTPGXoBlI\/AAAAAAAAA94\/9sF3Lpf27NI-v-RSPJcRd2KuXXJgeXYIACK4BGAYYCw\/s1600\/RDA5807_I2C_Format.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Формат обмена RDA5807M I2C 0x11h\" border=\"0\" height=\"320\" src=\"https:\/\/3.bp.blogspot.com\/-rbQHE-nFCIA\/XaSTPGXoBlI\/AAAAAAAAA94\/9sF3Lpf27NI-v-RSPJcRd2KuXXJgeXYIACK4BGAYYCw\/s640\/RDA5807_I2C_Format.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EФормат обмена с RDA5807M по I2C адресу 0x11h\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EКак можно видеть, при записи в режиме произвольного доступа первым передается адрес интересующего регистра (REGISTER ADDRESS), затем старший и младший байты данных. Для чтения содержимого регистра из RDA5807M микроконтроллер сначала передает его адрес, затем считывает старший и младший байты. Чуть позже я приведу пример чтения\/записи регистров, а пока разберемся с их назначением.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EРегистры RDA5807M\u003C\/h2\u003EУправление работой RDA5807M заключается в обращении к его регистрам: изменяя одни регистры, мы производим необходимые нам настройки; из других можно читать различную информацию (флаги, данные RDS и т.д.). Регистры 16-разрядные, их адреса и назначение приведены в \u003Ca href=\"https:\/\/drive.google.com\/open?id=12CnuAHVu1wTB-V42NQR3Zv26j4IddbN_\" target=\"_blank\"\u003Eдаташите\u003C\/a\u003E. Описание весьма скудное, поэтому я решил сам \"пощупать\" каждый регистр, чтобы понять какой бит за что отвечает. Для этого была написана следующая программа:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-HAQTO9iwnpY\/XatSCNTmSdI\/AAAAAAAAA-Y\/8zeHI5nc8vsaHrIAeQnjnSt4HsFBQVYZgCK4BGAYYCw\/s1600\/RDA5807M_software.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Программа для PC RDA5807M \" border=\"0\" height=\"488\" src=\"https:\/\/4.bp.blogspot.com\/-HAQTO9iwnpY\/XatSCNTmSdI\/AAAAAAAAA-Y\/8zeHI5nc8vsaHrIAeQnjnSt4HsFBQVYZgCK4BGAYYCw\/s640\/RDA5807M_software.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EУправление работой RDA5807M с компьютера\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EДанная программа читает значения регистров RDA5807M, отображает в удобном виде и позволяет изменять их, щелкая мышью по элементам управления. Ардуино при этом выступает в роли посредника между программой на компьютере и RDA5807M, для этого в нее должен быть загружен соответствующий скетч (вы найдёте его в программе по кнопке \"Скетч для Ардуино\"). Очень рекомендую попробовать данную программу, чтобы разобраться с назначением регистров. Скачать ее можно \u003Ca href=\"https:\/\/clc.to\/RDA5807M_software\" target=\"_blank\"\u003Eздесь\u003C\/a\u003E. И, чтобы совсем не осталось вопросов по управлению RDA5807M, привожу описание регистров на понятном языке.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable style=\"width: 751px;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003EРегистр\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003EБиты\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EИмя\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EНазначение\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003EЗначение\u003Cbr \/\u003Eпо умолчанию\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cstrong\u003E00h\u003C\/strong\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ECHIP_ID\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EChip ID - Идентификатор микросхемы. Есть у меня основания полагать, что значение ChipID состоит именно из двух байт, а не одного, как это указано в даташите.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0x5804\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cstrong\u003E02h\u003C\/strong\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EDHIZ\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EAudio Output High-Z Disable. Управляет состоянием аудио выводов: 0 - выводы находятся в высокоимпедансном состоянии; 1 - переводит выводы в рабочий режим.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E14\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EDMUTE\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EMute Disable - отключение режима mute, который по умолчанию включен (значение 0). Для отключения mute в этот бит следует записать 1.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E13\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EMONO\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EПринудительное моно, включается записью в данный бит значения 1\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E12\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EBASS\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EBass Boost - усиление басов. Для включения данной опции необходимо записать 1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E11\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERCLK_NON_\u003Cbr \/\u003ECALIBRATE_\u003Cbr \/\u003EMODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЕсли я правильно понял, этот бит отключает температурную компенсацию тактового генератора, в результате чего RDA5807M не сможет работать в заявленном температурном диапазоне (-20..70C) и сможет поддерживать колебания температуры только на +\/- 20C от точки настройки.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E10\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERCLK_DIRECT_\u003Cbr \/\u003EINPUT_MODE\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБит RCLK Direct Input Mode следует установить в 1, если используется внешний тактовый сигнал\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E9\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESEEKUP\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESeek Up - направление поиска радиостанций: 0 - к нижней границе диапазона; 1 - вверх.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E8\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESEEK\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЗапись 1 в этот бит запускает процесс поиска радиостанции. Поиск ведется в направлении, заданном битом SEEKUP, до нахождения радиостанции или до прохождения всего диапазона частот, после чего данный бит сбрасывается и устанавливается бит STC.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E7\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESKMODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESeek Mode. Определяет поведение при достижении границы диапазона во время поиска радиостанций: 0 - продолжить поиск с другой границы; 1 - прекратить поиск\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E6:4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ECLK_MODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EПозволяет выбрать частоту внешнего тактового сигнала. Возможны следующие значения:\u003Cbr \/\u003E000 = 32.768кГц\u003Cbr \/\u003E001 = 12МГц\u003Cbr \/\u003E101 = 24МГц\u003Cbr \/\u003E010 = 13МГц\u003Cbr \/\u003E110 = 26МГц\u003Cbr \/\u003E011 = 19.2МГц\u003Cbr \/\u003E111 = 38.4МГц\u003Cbr \/\u003EПри указании неверного значения ничего страшного не произойдет, просто FM приемник не сможет настраиваться на частоту и выполнять поиск радиостанций.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E000\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E3\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERDS_EN\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ERDS\/RBDS Enable. Запись 1 в этот бит включает прием RDS\/RBDS сообщений.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E2\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ENEW_METHOD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ENew Demodulation Method Enable - установка этого бита задействует новый метод демодуляции, способный улучшить чувствительность приемника\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESOFT_RESET\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EПрограммный сброс RDA5807M. Установка бита в 1 приведет к сбросу всех внутренних регистров к значениям по умолчанию. Сброс выполняется автоматически при включении питания микросхемы, нет необходимости сбрасывать устройство дополнительно.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EENABLE\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EPower Up Enable - разрешение работы. Установка в 1 переводит приемник в рабочий режим; 0 - спящий режим - отключает питание внутренних узлов, состояние регистров при этом сохраняется, после возвращения в рабочий режим необходимо выполнить TUNE для настройки на радиостанцию.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cstrong\u003E03h\u003C\/strong\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:6\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ECHAN\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EChannel Select - выбор канала. Частота радиостанции устанавливается не явно, а путем изменения значения CHAN, которое при умножении на SPACE и прибавления нижней границы диапазона дает итоговую частоту. \u003Cb\u003EДля записи CHAN необходимо также установить бит TUNE, в противном случае CHAN не изменится.\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0x00\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E5\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EDIRECT_MODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EРежим прямого управления, который используется только при тестировании - это описание из даташита, не уверен, что данный бит имеет отношение к RDA5807M.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u0026nbsp;\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ETUNE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЗапись в этот бит значения 1 запускает процесс настройки. По окончании настройки устанавливается бит STC, бит TUNE при этом сбрасывается.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u0026nbsp;\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E3:2\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EBAND\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EВыбор полосы. Возможно одно из четырех значений:\u003Cbr \/\u003E00 - 87..108МГц\u003Cbr \/\u003E01 - 76..91МГц\u003Cbr \/\u003E10 - 76..108МГц\u003Cbr \/\u003E11 - 65..76МГц или 50..65МГц (определяется битом 65M_50M MODE регистра 07h)\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E00\u0026nbsp;\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E1-0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESPACE\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЗадает шаг изменения частоты. Возможны следующие значения:\u003Cbr \/\u003E00 - 100кГц\u003Cbr \/\u003E01 - 200кГц\u003Cbr \/\u003E10 - 50кГц\u003Cbr \/\u003E11 - 25кГц\u003Cbr \/\u003EВ большинстве стран частоты радиостанций разнесены на 200кГц или 100кГц. Поэтому, скорее всего, вам не придется менять значение по умолчанию. Установив шаг 50кГц или 25кГц, вы лишь замедлите процесс поиска радиостанций.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;00\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u0026nbsp;\u003Cstrong\u003E04h\u003C\/strong\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:12\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБиты зарезервированы\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0000\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E11\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EDE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EDe-emphases. Определяет значение постоянной времени для\u0026nbsp; частотных предыскажений:\u003Cbr \/\u003E0 - 75мкс\u003Cbr \/\u003E1 - 50мкс\u003Cbr \/\u003EПредыскажения подразумевают усиление высоких частот сигнала при передаче (pre-emphasis) с целью уменьшения воздействия на них помех и последующее восстановление исходного сигнала в приемнике (ослабление высоких частот - de-emphases). В большинстве стран (в т.ч. в Европе и РФ) используется значение 50. В Северной и Южной Америке, в Южной Корее - 75.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E10\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЗарезервирован\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E1\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E9\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESOFTMUTE_EN\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESoft Mute Enable - приглушение звука, может быть использовано для минимизации шумов в условиях слабого приема. Функция включается установкой бита в 1.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E8\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EAFCD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EAutomatic Frequency Control Disable - отключение автоматической подстройки частоты.\u003Cbr \/\u003E0 - AFC работает\u003Cbr \/\u003E1 - AFC выключено.\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cstrong\u003E05h\u003C\/strong\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EINT_MODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EРежим генерации прерывания при завершении поиска\/настройки. Данный бит определен в даташите, но не имеет отношения к RDA5807M. Актуален для микросхем с дополнительными выводами GPIO, например, RDA5807P.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;1\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E14:12\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБиты зарезервированы\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E000\u0026nbsp;\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E11:8\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESEEKTH\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESeek Threshold. Данные биты задают порог отношения сигнал\/шум при выполнении поиска радиостанций.\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u0026nbsp;1000\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E7:6\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ELNA_PORT_SEL\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ELow Noise Amplifier Port Selection - эти биты пропущены в даташите RDA5807M. При этом они весьма важны, поскольку определяют источник сигнала для приемника (смотрите блок LNA на функциональной схеме приемника в даташите):\u003Cbr \/\u003E00 - нет входа\u003Cbr \/\u003E01 - LNAN (земля)\u003Cbr \/\u003E10 - LNAP (вход FMIN)\u003Cbr \/\u003E11 - оба источника\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E10\u0026nbsp;\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E5:4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБиты зарезервированы\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E00\u0026nbsp;\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E3:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EVOLUME\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EРегулировка громкости\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E1011\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E06h\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЗарезервирован\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E14:13\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EOPEN_MODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EДанные биты указаны в даташите, но они неактуальны для RDA5807M. В других микросхемах серии установка этих битов в 11 разрешает изменение остальных битов регистра, отвечающих за настройку I2S (Audio Data Interface).\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E00\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E07h\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЗарезервирован\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E14:10\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ETH_SOFTBLEND\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESoft Blend Thershold - настройка уровня шумоподавления.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E10000\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E9\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003E65M_50M MODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EДанный бит определяет используемый диапазон частот, когда биты BAND содержат значение 11:\u003Cbr \/\u003E0 - 50..76МГц\u003Cbr \/\u003E1 - 65..76МГц\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E1\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E8\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EЗарезервирован\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E7:2\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESEEK_TH_OLD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESeek Threshold Old - по аналогии с SEEKTH данные биты определяют порог при поиске радиостанций, но актуальны только при SEEK_MODE (биты 14:12 регистра 0x20h) = 001 - \"старый\" метод поиска.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E000000\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESOFTBLEND_EN\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESoft Blend Enable. Данный бит разрешает шумоподавление, уровень которого задан битами TH_SOFTBLEND. Помогает здорово очистить сигнал от помех.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E1\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EFREQ_MODE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EРежим задания частоты. Когда данный бит сброшен в 0, результирующая частота определяется как BAND + CHAN * STEP. При FREQ_MODE = 1 частота определяется как BAND + содержимое регистра 08h.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E08h\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EFREQ_DIRECT\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EОпределяет частоту при FREQ_MODE = 1. Результирующая частота является суммой значения данного регистра (в килогерцах) и нижней границы диапазона. Например, при BAND = 00 (87..108МГц) и FREQ_DIRECT = 20300 итоговая частота будет 107,3МГц.\u003Cbr \/\u003EОписание регистра FREQ_DIRECTотсутствует в даташите, вероятно, потому, что такой способ изменения частоты не является штатным.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0x0h\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E0Ah\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERDSR\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ERDS Ready - флаг готовности данных RDS\/RBDS (1 - данные готовы)\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E14\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESTC\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESeek\/Tune Complete - флаг завершения поиска\/настройки на заданную частоту (1 - операция завершена).\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E13\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ESF\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ESeek Fail - флаг, сигнализирующий о неуспешном выполнении поиска, когда не удалось найти сигнал с RSSI большим порога SEEKTH\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E12\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERDSS\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ERDS Synchronization - индикатор синхронизации RDS.\u003Cbr \/\u003E0 - RDS декодер не синхронизирован;\u003Cbr \/\u003E1 - RDS декодер синхронизирован.\u003Cbr \/\u003EВ даташите указано, что данный флаг обновляется только в verbose (подробном) режиме работы RDS (в противопоставление стандартному, менее информативному режиму), однако не уточняется, какой бит отвечает за выбор режима. Судя по тому, что данный флаг обновляется, как и биты BLERA .. BLERD, RDA5807M по умолчанию работает в подробном режиме RDS.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E11\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EBLK_E\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EДанный флаг сообщает о получении E блока.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E10\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EST\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EStereo Indicator.\u003Cbr \/\u003E0 - моно;\u003Cbr \/\u003E1 - стерео.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E1\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E9:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EREADCHAN\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003ERead Channel. Эти биты содержат значение CHAN, доступны только для чтения. В режиме последовательного доступа к регистрам RDA5807M стартовый адрес для чтения - 0Ah, таким образом нет возможности прочитать значение CHAN регистра 03h. Этим и обусловлено наличие битов READCHAN.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0x0h\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E0Bh\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:9\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSSI\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EReceived Signal Strength Indicator - показатель уровня принимаемого сигнала.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E8\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EFM_TRUE\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EДанный флаг сигнализирует о наличии передачи на текущей частоте. То есть приемник настроен на радиостанцию.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E7\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EFM_READY\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EНасколько я могу судить, данный флаг идентичен флагу STC\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E6:5\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERSVD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБиты зарезервированы\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E00\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EABCD_E\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EДействующий в США стандарт RBDS помимо блоков A, B, C и D, предусмотренных стандартом RDS,\u0026nbsp; предполагает использование еще одного блока - E. Бит ABCD_E помогает идентифицировать содержимое регистров 0Ch..0Fh как\u0026nbsp; ABCD или E:\u003Cbr \/\u003E0 - A, B, C, D\u003Cbr \/\u003E1 - E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E3:2\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EBLERA\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EBlock Errors Level Of A - уровень ошибок в блоке A (RDS) или E (RBDS, когда ABCD_E флаг установлен в 1):\u003Cbr \/\u003E00 - нет ошибок;\u003Cbr \/\u003E01 - 1..2 ошибки требуют коррекции;\u003Cbr \/\u003E10 - 3..5 ошибок\u0026nbsp; требуют коррекции;\u003Cbr \/\u003E11 - более 6 ошибок - блок некорректный и не должен использоваться.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E1:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EBLERB\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EBlock Errors Level Of B - уровень ошибок в блоке B (RDS) или E (RBDS, когда ABCD_E флаг установлен в 1). Значения битов аналогичны BLERA.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E0Ch\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERDSA\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБлок A (в режиме RDS) или E (в режиме RBDS при ABCD_E = 1).\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0x5803h\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E0Dh\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERDSB\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБлок B (в режиме RDS) или E (в режиме RBDS при ABCD_E = 1).\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0x5804h\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E0Eh\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERDSC\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБлок C (в режиме RDS) или E (в режиме RBDS при ABCD_E = 1).\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0x5808h\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E0Fh\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:0\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003ERDSD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EБлок D (в режиме RDS) или E (в режиме RBDS при ABCD_E = 1).\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E0x5804h\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cb\u003E10h\u003C\/b\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E15:14\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EBLERC\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EBlock Errors Level Of C - уровень ошибок в блоке C (RDS) или E (RBDS, когда ABCD_E флаг установлен в 1). Значения битов аналогичны BLERA.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u003Cbr \/\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center; width: 58px;\"\u003E\u003Cbr \/\u003E\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 42px;\"\u003E13:12\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EBLERD\u003C\/td\u003E\u003Ctd style=\"width: 433px;\"\u003EBlock Errors Level Of D - уровень ошибок в блоке D (RDS) или E (RBDS, когда ABCD_E флаг установлен в 1). Значения битов аналогичны BLERA.\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 82px;\"\u003E\u003Cbr \/\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cdiv\u003EЭто не все регистры RDA5807M, по старшим адресам доступны другие. Возможно, среди них есть еще что-то интересное. И если вам о них известно, пишите, добавлю их в список.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EПрограммирование RDA5807M\u003C\/h2\u003EДавайте начнем с простенького скетча. Если вы попробуете управлять RDA5807M из моей программы, то обнаружите, что для того чтобы заставить его работать достаточно установить несколько битов: ENABLE, DHIZ, DMUTE, SEEK. Установка последнего запустит поиск радиостанции. Эти же действия можно выполнить программно при помощи следующего скетча:\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  setRegister(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x02\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0xC101\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ set ENABLE, DHIZ, DMUTE, SEEK\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E setRegister(uint8_t reg, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Econst\u003C\/span\u003E uint16_t value) {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EbeginTransmission\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x11\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(reg);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EhighByte\u003C\/span\u003E(value));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ElowByte\u003C\/span\u003E(value));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EendTransmission\u003C\/span\u003E(true);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EПодключите RDA5807M к Ардуино по приведенной ранее схеме и залейте в нее скетч. Приемник выполнит поиск и настроится на первую найденную радиостанцию. Бит Tune при этом сбрасывается. Нажатие кнопки Reset на Ардуино и повторное выполнение функции setup будут снова устанавливать этот бит, инициируя поиск следующей станции. Работает? Двигаемся дальше.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EВ примере скетча выше мы записали в регистр 02h заранее определенное значение. На деле такое требуется редко, разве что для инициализации некоторых регистров. В основном же значения регистров формируются в процессе работы программы при изменении отдельных битов. В таких случаях удобно использовать константы, содержащие номера этих битов или маски для их установки. Ниже приведен пример такого скетча. Он позволяет настроиться на конкретную радиостанцию, установить громкость и получить RSSI.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_RANDOM_ACCESS_ADDRESS 0x11\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ регистры\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_REG_CONFIG 0x02\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_REG_TUNING 0x03\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_REG_VOLUME 0x05\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_REG_RSSI   0x0B\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ флаги\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_FLG_DHIZ 0x8000\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_FLG_DMUTE 0x4000\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_FLG_BASS 0x1000\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_FLG_ENABLE word(0x0001)\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_FLG_TUNE word(0x0010)\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/маски\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_CHAN_MASK 0xFFC0\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_CHAN_SHIFT 6\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_VOLUME_MASK word(0x000F)\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_VOLUME_SHIFT 0\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_RSSI_MASK 0xFE00\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RDA5807M_RSSI_SHIFT 9\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003Euint8_t volume = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ 0..15\u003C\/span\u003E\u003Cbr \/\u003Euint16_t freq = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1073\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ 107.3FM\u003C\/span\u003E\u003Cbr \/\u003Euint16_t reg02h, reg03h, reg05h, reg0Bh;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9600\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Регистр 02h - включение, настройки\u003C\/span\u003E\u003Cbr \/\u003E  reg02h = RDA5807M_FLG_ENABLE | RDA5807M_FLG_DHIZ | RDA5807M_FLG_DMUTE;\u003Cbr \/\u003E  setRegister(RDA5807M_REG_CONFIG, reg02h);\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ А потом решили еще усилить басы:\u003C\/span\u003E\u003Cbr \/\u003E  reg02h |= RDA5807M_FLG_BASS;\u003Cbr \/\u003E  setRegister(RDA5807M_REG_CONFIG, reg02h);\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Регистр 03h - выбор радиостанции\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ После сброса в регистре 03h значение по умолчанию - 0\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Таким образом BAND = 00 (87..108МГц), STEP = 00 (100кГц). Оставим их как есть\u003C\/span\u003E\u003Cbr \/\u003E  reg03h = (freq - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E870\u003C\/span\u003E) \u0026lt;\u0026lt; RDA5807M_CHAN_SHIFT; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ chan = (freq - band) \/ space\u003C\/span\u003E\u003Cbr \/\u003E  setRegister(RDA5807M_REG_TUNING, reg03h | RDA5807M_FLG_TUNE);\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Регистр 05h. Установим громкость, остальные биты не изменяем\u003C\/span\u003E\u003Cbr \/\u003E  reg05h = getRegister(RDA5807M_REG_VOLUME); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Считываем текущее значение\u003C\/span\u003E\u003Cbr \/\u003E  reg05h \u0026amp;= ~RDA5807M_VOLUME_MASK; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Сбрасываем биты VOLUME\u003C\/span\u003E\u003Cbr \/\u003E  reg05h |= volume \u0026lt;\u0026lt; RDA5807M_VOLUME_SHIFT; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Устанавливаем новую громкость\u003C\/span\u003E\u003Cbr \/\u003E  setRegister(RDA5807M_REG_VOLUME, reg05h);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Регистр 0Bh - статус\u003C\/span\u003E\u003Cbr \/\u003E  reg0Bh = getRegister(RDA5807M_REG_RSSI);\u003Cbr \/\u003E  uint8_t \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ERSSI\u003C\/span\u003E = (reg0Bh \u0026amp; RDA5807M_RSSI_MASK) \u0026gt;\u0026gt; RDA5807M_RSSI_SHIFT;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"RSSI = \"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ERSSI\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\" (0-min, 127-max)\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E500\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E setRegister(uint8_t reg, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Econst\u003C\/span\u003E uint16_t value) {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EbeginTransmission\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x11\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(reg);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EhighByte\u003C\/span\u003E(value));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ElowByte\u003C\/span\u003E(value));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EendTransmission\u003C\/span\u003E(true);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Euint16_t getRegister(uint8_t reg) {\u003Cbr \/\u003E  uint16_t result;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EbeginTransmission\u003C\/span\u003E(RDA5807M_RANDOM_ACCESS_ADDRESS);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(reg);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EendTransmission\u003C\/span\u003E(false);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ErequestFrom\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x11\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, true);\u003Cbr \/\u003E  result = (uint16_t)\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eread\u003C\/span\u003E() \u0026lt;\u0026lt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E8\u003C\/span\u003E;\u003Cbr \/\u003E  result |= \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EWire\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eread\u003C\/span\u003E();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E result;\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EВ этом примере значения регистров получаются установкой отдельных разрядов. Для этого используются определенные в начале скетча флаги и маски. Я описал несколько из них для примера, остальные добавляются по аналогии.\u003Cbr \/\u003E\u003Cbr \/\u003EЧтобы настроить RDA5807M на интересующую частоту необходимо установить значения BAND и SPACE и затем изменять только значение CHAN. Итоговая частота определяется по формуле:\u003Cbr \/\u003E\u003Ci\u003EF = BAND + CHAN * SPACE.\u003C\/i\u003E\u003Cbr \/\u003E\u003Ci\u003E\u003Cbr \/\u003E\u003C\/i\u003EВ скетче используются определенные по умолчанию BAND и SPACE (87..108МГц\u0026nbsp; и 100кГц соответственно). По ним можно определить значение, которое должно быть записано в биты CHAN для получения интересующей частоты. Не забывайте при записи CHAN устанавливать также бит TUNE.\u003Cbr \/\u003E\u003Cbr \/\u003EДля изменения громкости значение регистра 05h считывается из RDA5807M в переменную. Затем осуществляется сброс битов VOLUME. И уже после этого можно устанавливать новое значение громкости и записывать результат в регистр.\u003Cbr \/\u003E\u003Cbr \/\u003EДля получения RSSI выполняются обратные действия: в считанном из регистра 0Bh значении сбрасываются все биты, кроме содержащих RSSI. Затем результат сдвигается вправо, чтобы младший бит RSSI оказался в младшем разряде переменной. Так мы получим нужное нам значение.\u003Cbr \/\u003E\u003Cbr \/\u003EТеперь, когда описаны основные приемы управления RDA5807M, можно приступить к программированию. Нужно лишь определиться с функционалом и интерфейсом.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EДобавим LCD дисплей и энкодер\u003C\/h2\u003EДа, я люблю использовать в своих проектах LCD2004 с I2C интерфейсом и энкодер вращения. Это уже привычные для меня элементы создания пользовательского интерфейса. Используя их, я могу сосредоточиться на текущей задаче, а не заморачиваться с изобретением велосипеда. Поэтому сейчас я добавил их в схему:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-faaSpKgH638\/XcRqR_mBmRI\/AAAAAAAABAU\/J_-t3kiZg38lHJHCLqvGBzHW0vU_FnueACK4BGAYYCw\/s1600\/RDA5807M%2Bradio.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Радио на Arduino и RDA5807M с дисплеем и энкодером\" border=\"0\" height=\"466\" src=\"https:\/\/3.bp.blogspot.com\/-faaSpKgH638\/XcRqR_mBmRI\/AAAAAAAABAU\/J_-t3kiZg38lHJHCLqvGBzHW0vU_FnueACK4BGAYYCw\/s640\/RDA5807M%2Bradio.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСхема радио с дисплеем и энкодером\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-5Hm11ZgzSx4\/XcQxo_SctRI\/AAAAAAAABAI\/sPJPk1Dp5mA2gFZvkBoEvc3HHW81s0PKACK4BGAYYCw\/s1600\/RDA5807%2BArduino%2BRadio.jpg\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Макет радио RDA5807M с дисплеем и энкодером\" border=\"0\" height=\"360\" src=\"https:\/\/2.bp.blogspot.com\/-5Hm11ZgzSx4\/XcQxo_SctRI\/AAAAAAAABAI\/sPJPk1Dp5mA2gFZvkBoEvc3HHW81s0PKACK4BGAYYCw\/s640\/RDA5807%2BArduino%2BRadio.jpg\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EМакет радио с дисплеем и энкодером\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EИтак, моя текущая задача - это создание радио с базовым функционалом и индикацией. О законченном проекте речь пока не идет. Для меня это скорее знакомство с данным модулем. Поэтому в предлагаемом ниже скетче нет фишек вроде сохранения списка радиостанций в EEPROM. Нет и работы с RDS - использованию этой технологии в RDA5807M я посвящу следующую публикацию. В последствии я планирую сделать радио в оригинальном корпусе с OLED дисплеем. А пока можете оценить результат данного этапа, скетч доступен по \u003Ca href=\"https:\/\/clc.to\/RDA5807M_Arduino\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E. Для работы требуется библиотека\u0026nbsp;\u003Ca href=\"https:\/\/github.com\/VladimirTsibrov\/LiquidCrystal_I2C_Menu\" target=\"_blank\"\u003ELiquidCrystal_I2C_Menu\u003C\/a\u003E, скачайте и установите ее.\u003Cbr \/\u003E\u003Cbr \/\u003EВ скетче реализовано:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EПоиск радиостанции вверх\/вниз и отображение частоты\u003C\/li\u003E\u003Cli\u003EРегулировка громкости\u003C\/li\u003E\u003Cli\u003EВвод значения частоты энкодером\u003C\/li\u003E\u003Cli\u003EВыбор поведения при повороте энкодера: регулировка громкости или поиск радиостанции\u003C\/li\u003E\u003Cli\u003EУстановка ряда параметров, отвечающих за звук и шумоподавление\u003C\/li\u003E\u003Cli\u003EСохранение настроек в EEPROM и чтение их при включении радио\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003E\u003Cbr \/\u003EВход в меню осуществляется при нажатии на кнопку энкодера. Кстати, в скетче присутствует код для управления RDA5807M с компьютера из упомянутой ранее программы. Это удобно для отслеживания содержимого регистров в процессе работы радио. Чтобы отключить эту возможность достаточно закомментировать первую строку скетча.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EНа этом пока всё. Продолжение будет в \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2020\/01\/rda5807m-part2-rds.html\" target=\"_blank\"\u003Eследующей публикации\u003C\/a\u003E с обзором RDS.\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4390016895923810112\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2019\/11\/rda5807m-part1.html#comment-form","title":"Комментарии: 73"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4390016895923810112"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4390016895923810112"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2019\/11\/rda5807m-part1.html","title":"Радио на RDA5807M. Часть 1"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-QPphE8A9DMs\/XbFw6G_Y_pI\/AAAAAAAAA-4\/k8eezPUmeNwBTs-iSMFOc2FxoyfvE7SAgCK4BGAYYCw\/s72-c\/RRD102v2.jpg","height":"72","width":"72"},"thr$total":{"$t":"73"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4780808054013150817"},"published":{"$t":"2018-10-12T15:22:00.003+03:00"},"updated":{"$t":"2020-11-24T22:24:16.327+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"LiquidCrystal_I2C_Ext - библиотека для создания меню на Ардуино"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EЯ обратил внимание, что тема создания меню на Ардуино и ЖК дисплее весьма популярна. И ей уже посвящена одна из моих публикаций. Но я понимаю, что для новичков адаптация моего скетча может показаться нетривиальной задачей. Поэтому я решил написать библиотеку для создания меню на Ардуино и ЖК дисплее с I2C управлением, которую было бы легко использовать даже начинающему ардуинщику.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003EВ моем распоряжении имеется ЖК дисплей 20x4 с I2C интерфейсом, к сожалению, без поддержки кириллицы. Для работы с ним нужна библиотека, я использую LiquidCrystal_I2C. И, чтобы моя библиотека не была отдельной надстройкой, завязанной на LiquidCrystal_I2C, я решил доработать последнюю, добавив в нее новые функции. И речь не только о создании меню: я добавил в библиотеку различные наработки, накопившиеся у меня за время работы с данным дисплеем.\u003Cbr \/\u003E\u003Cbr \/\u003EКак и прежде для навигации по меню необходим инкрементный энкодер с кнопкой, например, KY-040. Код для работы с ним был помещен непосредственно в библиотеку. Необходимо лишь указать к каким выводам Ардуино подключен энкодер.\u003Cbr \/\u003E\u003Cbr \/\u003EПолучившуюся библиотеку я назвал LiquidCrystal_I2C_Ext, скачать ее можно по ссылке\u0026nbsp;\u003Ca href=\"http:\/\/clc.la\/LiquidCrystal_I2C_Ext\" target=\"_blank\"\u003Ehttp:\/\/clc.la\/LiquidCrystal_I2C_Ext\u003C\/a\u003E . По сравнению с предшественницей в ней появились следующие функции:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003E\u003Cb\u003EprintAt(x, y, text)\u003C\/b\u003E – вывод текста на дисплей с указанной позиции.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003Eprintf(format, …)\u003C\/b\u003E – форматированный вывод текста. Лично мне очень не хватало этой функции. Если раньше приходилось делать несколько вызовов print, или выводить текст в промежуточный буфер функцией sprintf, то сейчас достаточно одного вызова printf.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EprintfAt(x, y, format, …)\u003C\/b\u003E – форматированный вывод с указанной позиции.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EattachEncoder(pinA, pinB, pinBtn)\u003C\/b\u003E – сообщает библиотеке, к каким выводам Ардуино подключен энкодер. Должна быть вызвана перед использованием описанных далее функций.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EgetEncoderState()\u003C\/b\u003E – опрос состояния энкодера. Возвращает значение типа eEncoderState (перечисляемый тип, описан в библиотеке как {eNone, eLeft, eRight, eButton}).\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EprintMultiline(text)\u003C\/b\u003E – вывод длинного текста с возможностью вертикальной прокрутки. Возврат из функции осуществляется при нажатии кнопки энкодера.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputVal(title, min, max, default, [step])\u003C\/b\u003E – ввод значения путем вращения ручки энкодера. title – заголовок; параметры min и max задают диапазон, в котором может изменяться значение; default – начальное значение; step –\u0026nbsp;величина приращения, по умолчанию равна 1. Выход из функции осуществляется при нажатии кнопки энкодера.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputValAt(x, y, min, max, default, [step])\u003C\/b\u003E – аналогична функции inputVal, но в отличие от нее не очищает дисплей при вызове и ввод значения осуществляется с указанной позиции. Данная функция может использоваться в паре с printf\/printfAt, когда требуется вывести не статичный заголовок.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputValBitwise(title, value, precision, [scale], [signed])\u003C\/b\u003E – в отличие от функции inputVal, которая подходит для ввода значений из небольшого диапазона, inputValBitwise позволяет вводить значения путем редактирования отдельных разрядов числа. Параметр title определяет заголовок; value – ссылка на переменную, в которую будет помещен результат ввода; precision – общее количество разрядов в числе; scale –\u0026nbsp;количество разрядов после запятой, значение по умолчанию 0; signed –\u0026nbsp;разрешает (при значении 1) или запрещает (при значении 0 –\u0026nbsp;по умолчанию) ввод отрицательных чисел. Функция возвращает 1, если пользователь подтвердил ввод, 0, если отказался.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputStrVal(title, buffer, length, available_symbols)\u003C\/b\u003E – аналогично функции inputValBitwise предоставляет возможность поразрядного ввода, но кроме цифр могут быть введены и другие символы. Параметр title определяет заголовок; buffer – ссылка на символьный буфер, в который будет помещен результат ввода; length – количество вводимых символов; параметр available_symbols –\u0026nbsp;это строка символов, доступных для ввода. Функция возвращает 1, если пользователь подтвердил ввод, 0, если отказался.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EselectVal(title, list_of_values, count, selected_index)\u003C\/b\u003E – позволяет выбрать значение из списка list и возвращает индекс выбранного элемента.\u0026nbsp; title – отображаемый на дисплее заголовок, list – список значений для выбора, представляет собой массив значений типа char*, String или int; count – количество элементов; selected_index – индекс выбранного по умолчанию элемента.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EshowMenu(menu, menu_length, show_title)\u003C\/b\u003E – отображает меню и возвращает ключ выбранного элемента. menu – массив элементов типа sMenuItem; menu_length – длина меню; show_title – признак необходимости отображения заголовка.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EЯ приведу несколько примеров с данными функциями, чтобы не осталось вопросов по их использованию.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EprintAt, printf, printfAt\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E hello[] = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Hello, world!\"\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003EString\u003C\/span\u003E s = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"String example\"\u003C\/span\u003E;\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"millis=%lu\"\u003C\/span\u003E, \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Emillis\u003C\/span\u003E());\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E, hello);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2\u003C\/span\u003E, s);\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%s\"\u003C\/span\u003E, s.c_str());\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФункция printAt поддерживает те же типы данных, что и print: вы можете выводить на дисплей целые и дробные числа, текстовые строки (будь то массив символов или переменная типа String). А при работе с функциями форматированного вывода не забывайте, что они не поддерживают тип String и передавать им нужно указатель на строку в стиле Си. Для этого достаточно вызвать функцию c_str() класса String, в примере выше это показано.\u003Cbr \/\u003E\u003Cbr \/\u003EГоворя о форматированном выводе, хочу отметить еще один момент. Реализация функций семейства printf на Ардуино поддерживает не все команды форматирования. Это было сделано с целью уменьшить размер библиотеки. Лично я столкнулся с невозможностью указать в формате printf значения width и precision через переменную (т.е. через символ *).\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EattachEncoder, getEncoderState\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eint\u003C\/span\u003E x = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Счетчик\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%d \"\u003C\/span\u003E, x);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Опрашиваем состояние энкодера\u003C\/span\u003E\u003Cbr \/\u003E  eEncoderState EncoderState = lcd.getEncoderState();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eswitch\u003C\/span\u003E (EncoderState) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eLeft: \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ При вращении влево уменьшаем счетчик\u003C\/span\u003E\u003Cbr \/\u003E      x--;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eRight: \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ При вращении вправо увеличиваем счетчик\u003C\/span\u003E\u003Cbr \/\u003E      x++;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eButton: \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ При нажатии обнуляем\u003C\/span\u003E\u003Cbr \/\u003E      x = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ecase\u003C\/span\u003E eNone: \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Состояние энкодера не изменилось. Выходим из функции\u003C\/span\u003E\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E  }\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%d \"\u003C\/span\u003E, x); \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Выводим значение счетчика на дисплей\u003C\/span\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv\u003EВ данном примере выполняется подключение энкодера и опрос его состояния в цикле. При вращении энкодера изменяется значение переменной x и выводится на дисплей. Нажатие на кнопку приводит к обнулению переменной.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EprintMultiline\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;avr\/pgmspace.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E text_1[] PROGMEM = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Using PROGMEM example\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E text_2[] PROGMEM = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"This text is stored in FLASH\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E* \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Etext\u003C\/span\u003E[] PROGMEM = {text_1, text_2};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E *\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E;\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E = (\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E*) malloc(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E30\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Выделяем память для чтения строки из памяти программ\u003C\/span\u003E\u003Cbr \/\u003E  strcpy_P(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E, (\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E*)pgm_read_word(\u0026amp;(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Etext\u003C\/span\u003E[\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E]))); \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Считываем строку из памяти программ\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Выводим содержимое буфера на экран\u003C\/span\u003E\u003Cbr \/\u003E  strcpy_P(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E, (\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E*)pgm_read_word(\u0026amp;(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Etext\u003C\/span\u003E[\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E])));\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E);\u003Cbr \/\u003E  free(\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebuffer\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ И освобождаем буфер\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(F(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Using F() macro example. Press button to continue.\"\u003C\/span\u003E));\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: left;\"\u003EНа функции printMultiline нужно остановиться поподробнее. Она позволяет выводить на дисплей длинные строки с возможностью прокрутки. Но, объявив несколько таких строк в своем скетче, при компиляции вы можете заметить, как быстро они \"съедают\" память данных. Например, в Ардуино Уно для хранения данных доступно всего 2кб, тогда как для кода программы отведено 32кб. Поэтому при наличии в программе большого объема текстовых данных целесообразно разместить их в памяти программ. Для этого используется ключевое слово PROGMEM.\u0026nbsp;\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EPROGMEM –\u0026nbsp;это модификатор переменных, он сообщает компилятору, что указанная переменная должна быть размещена не в памяти данных, а в памяти программ. Работает этот модификатор только с типами данных, объявленными в файле pgmspace.h, частью которой он является. Чтобы впоследствии процессор мог что-то сделать с этими данными, они должны быть скопированы из flash в SRAM. Для этого в примере выше выделяется буфер, в который происходит считывание строк. После того как данные выведены на дисплей буфер может быть освобожден.\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EЕще один вариант размещения строки в памяти программ –\u0026nbsp;это использование макроса F() непосредственно в функции printMultiline. В примере это также показано.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EinputVal, inputValAt\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Запрашиваем длину массива:\u003C\/span\u003E\u003Cbr \/\u003E  uint8_t len = lcd.inputVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input array len\"\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E8\u003C\/span\u003E);\u003Cbr \/\u003E  uint8_t A[len];\u003Cbr \/\u003E  uint8_t t;\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Запрашиваем элементы массива:\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E; i \u0026lt; len; i++) {\u003Cbr \/\u003E    lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input A[%d]: \"\u003C\/span\u003E, i);\u003Cbr \/\u003E    A[i] = lcd.inputValAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E12\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E9\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Сортируем массив:\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E; i \u0026lt; len - \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E; i++) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t j = i + \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E; j \u0026lt; len; j++) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E(A[i] \u0026gt; A[j]){\u003Cbr \/\u003E        t = A[i];\u003Cbr \/\u003E        A[i] = A[j];\u003Cbr \/\u003E        A[j] = t;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Выводим отсортированный массив на дисплей:\u003C\/span\u003E\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Sorted array:\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E; i \u0026lt; len; i++)\u003Cbr \/\u003E    lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"%d \"\u003C\/span\u003E, A[i]);\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Для продолжения ждем нажатия кнопки:\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Press button\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"to continue\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() != eButton);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: left;\"\u003EДля демонстрации использования функций inputVal и inputValAt в данном примере предлагается ввести длину массива, а затем элементы массива. Введенный массив сортируется и выводится на дисплей. Отличие этих двух функций состоит в том, что inputValAt при вызове не очищает дисплей и позволяет предварительно вывести на дисплей заголовок, используя printf. В скетче выше это используется для отображения индекса вводимого элемента массива. \u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EinputValBitwise\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Elong\u003C\/span\u003E v = \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (lcd.inputValBitwise(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input value\"\u003C\/span\u003E, v, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E5\u003C\/span\u003E))\u003Cbr \/\u003E    lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"You entered %ld\"\u003C\/span\u003E, v);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input canceled\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Press button\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"to continue\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() != eButton); \u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Для продолжения ждем нажатия кнопки\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EВ данном скетче для ввода значения используется функция inputValBitwise. В параметрах функции присутствует заголовок, переменная, в которую будет помещено введенное значение, и количество разрядов для ввода. При подтверждении ввода на дисплей выводится соответствующее сообщение.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EinputStrVal\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E ip[] = \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"192.168.001.001\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (lcd.inputStrVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input IP\"\u003C\/span\u003E, ip, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E15\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"0123456789\"\u003C\/span\u003E)){\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"You entered:\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E, ip);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Input canceled\"\u003C\/span\u003E);\u003Cbr \/\u003E  press_button_to_continue();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E press_button_to_continue(){\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Press button\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"to continue\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() != eButton);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EЗдесь функция inputStrVal используется для ввода IP адреса. При вызове функции содержимое переданного буфера рассматривается как значение по умолчанию и выводится на дисплей. Последний параметр функции определяет разрешенные для ввода символы, в данном случае только цифры.\u0026nbsp;Если буфер содержит символы, которые не могут быть введены, то их не удастся изменить. Таким образом можно реализовать маскированный ввод.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EselectVal\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eint\u003C\/span\u003E index;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003EString\u003C\/span\u003E list[] = {\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Off\"\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"On\"\u003C\/span\u003E};\u003Cbr \/\u003E  index = lcd.selectVal(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Turn backlight\"\u003C\/span\u003E, list, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2\u003C\/span\u003E, lcd.getBacklight());\u003Cbr \/\u003E  lcd.setBacklight(index);\u003Cbr \/\u003E  lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Backlight turned %s\"\u003C\/span\u003E, list[index].c_str());\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2000\u003C\/span\u003E);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EФункция selectVal очень полезна при выборе значения из списка. Эта задача может быть решена и с использованием меню, но преимущество функции selectVal состоит в том, что она не только позволяет выбрать значение, но еще и показывает текущее выбранное значение. Функция работает с массивами значений типа char*, String или int и возвращает индекс выбранного элемента.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EshowMenu\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: #434f54;\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: #728e00;\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Перечислим значения, используемые в меню для задания связи родитель-потомок\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Eenum\u003C\/span\u003E {mkBack, mkRoot, mkRun, mkOptions, mkMode, mkSpeed, mkLog, mkSelftest, mkHelp, mkFAQ, mkIndex, mkAbout};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Опишем меню\u003C\/span\u003E\u003Cbr \/\u003EsMenuItem menu[] = {\u003Cbr \/\u003E  {mkBack, mkRoot, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Menu demo\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkRun, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Run\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkOptions, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Options\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkMode, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Mode\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkSpeed, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Speed\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkLog, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Print log\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkSelftest, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Selftest\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Back\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkHelp, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Help\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkFAQ, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"FAQ\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkIndex, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Index\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkAbout, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"About\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Back\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Exit menu\"\u003C\/span\u003E}\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"rgba(149, 165, 166, 0.8)\"\u003E\/\/ Определим колчество элементов в меню\u003C\/span\u003E\u003Cbr \/\u003Euint8_t menuLen = \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Esizeof\u003C\/span\u003E(menu) \/ \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Esizeof\u003C\/span\u003E(sMenuItem);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  uint8_t selectedMenuItem = lcd.showMenu(menu, menuLen, \u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkRun)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Run selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkMode)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Mode selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkSpeed)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Speed selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkLog)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Print log selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkSelftest)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Selftest selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkFAQ)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"FAQ selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkIndex)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Index selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkAbout)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"About selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkBack)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: #005c5f;\"\u003E\"Exit selected\"\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cspan class=\"hljs-built_in\" style=\"color: #d35400;\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: #8a7b52;\"\u003E2000\u003C\/span\u003E);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EНу и, наконец, последняя функция –\u0026nbsp;showMenu, которая берет на себя отрисовку меню и навигацию по нему. Работу с ней можно разделить на 3 этапа. Сначала нужно описать меню. Для этого в библиотеке определена структура sMenuItem:\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Estruct\u003C\/span\u003E sMenuItem {\u003Cbr \/\u003E  uint8_t parent;\u003Cbr \/\u003E  uint8_t key;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: #00979d;\"\u003Echar\u003C\/span\u003E    *caption;\u003Cbr \/\u003E};\u003C\/pre\u003E\u003Cbr \/\u003EПараметры parent и key служат для задания иерархии, caption –\u0026nbsp;указатель на название элемента меню. В примере показано, как описывается меню в виде массива элементов sMenuItem.\u003Cbr \/\u003E\u003Cbr \/\u003EВ качестве parent и key могут быть использованы целочисленные значения, начиная с 1. Но гораздо удобнее определить для них символьные имена, т.е. работать с перечислением. Обратите внимание на то, что первым в перечислении определено значение mkBack, ему соответствует значение 0. Данное значение является служебным и используется для пунктов меню, отвечающих за возврат на уровень выше.\u003Cbr \/\u003E\u003Cbr \/\u003EСледующий этап –\u0026nbsp;вызов функции showMenu. Ее параметрами являются описанное ранее меню, его длина и признак отвечающий за вывод заголовка.\u003Cbr \/\u003E\u003Cbr \/\u003EПри выборе пункта меню, не имеющего подменю, функция возвращает соответствующее ему значение key. И остается последний этап –\u0026nbsp;проанализировать вернувшееся значение при помощи if или case и выполнить соответствующее выбранному элементу действие.\u003Cbr \/\u003E\u003Cbr \/\u003EПо-моему, получилась интересная библиотека.\u0026nbsp; Есть некоторые вещи, которые хотелось бы доработать (например, в меню нет прокрутки длинных названий),\u0026nbsp; но я решил их пока отложить, т.к. сейчас занимаюсь другими проектами. В общем скачивайте, пробуйте, оставляйте комментарии.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4780808054013150817\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/10\/LiquidCrystalI2CExt.html#comment-form","title":"Комментарии: 114"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4780808054013150817"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4780808054013150817"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/10\/LiquidCrystalI2CExt.html","title":"LiquidCrystal_I2C_Ext - библиотека для создания меню на Ардуино"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"114"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4256446582282147909"},"published":{"$t":"2018-06-24T18:43:00.000+03:00"},"updated":{"$t":"2019-03-20T21:26:28.459+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"spi"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Генератор сигналов на AD9833"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s1600\/AD9833.jpg\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Генератор AD9833\" border=\"0\" height=\"320\" src=\"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s320\/AD9833.jpg\" title=\"AD9833 подключение к Ардуино\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EAD9833 - это программируемый генератор сигналов с низким энергопотреблением. Позволяет генерировать сигналы с частотой до 12.5МГц синусоидальной, треугольной и прямоугольной формы. Программирование осуществляется с использованием трехпроводного интерфейса SPI и не составляет труда. Ниже приведены основные характеристики микросхемы:\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EЦифровое программирование частоты и фазы.\u003C\/li\u003E\u003Cli\u003EПотребляемая мощность 12.65 мВт при напряжении 3 В.\u003C\/li\u003E\u003Cli\u003EДиапазон выходных частот от 0 МГц до 12.5 МГц.\u003C\/li\u003E\u003Cli\u003EРазрешение 28 бит (0.1 Гц при частоте опорного сигнала 25 МГц).\u003C\/li\u003E\u003Cli\u003EСинусоидальные, треугольные и прямоугольные выходные колебания.\u003C\/li\u003E\u003Cli\u003EНапряжение питания от 2.3 В до 5.5 В.\u003C\/li\u003E\u003Cli\u003EТрехпроводной интерфейс SPI.\u003C\/li\u003E\u003Cli\u003EРасширенный температурный диапазон: от –40°C до +105°C.\u003C\/li\u003E\u003Cli\u003EОпция пониженного энергопотребления.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EБолее подробную информацию вы можете найти в \u003Ca href=\"http:\/\/clc.la\/ad9833_datasheet\" target=\"_blank\"\u003Eдаташите\u003C\/a\u003E. В характеристиках также заявлено, что микросхема не требует внешних компонентов, но здесь производитель лукавит: обвязка и источник опорной частоты все же нужны. На Али продаются модули AD9833 с необходимой обвязкой и кварцевым генератором на 25 МГц, как раз с таким модулем я и собираюсь экспериментировать. Данный модуль имеет следующие выводы:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EVCC – плюс питания для цифровых и аналоговых цепей генератора.\u003C\/li\u003E\u003Cli\u003EDGND – цифровая земля.\u003C\/li\u003E\u003Cli\u003ESDATA – вход данных интерфейса SPI. Передача осуществляется 16-битными словами.\u003C\/li\u003E\u003Cli\u003ESCLK – вход тактового сигнала SPI. Используется второй режим работы: (CPOL = 1, CPHA = 0).\u003C\/li\u003E\u003Cli\u003EFSYNC – выбор микросхемы. Перед началом передачи данных должен быть установлен в 0, по завершении в 1.\u003C\/li\u003E\u003Cli\u003EAGND – аналоговая земля.\u003C\/li\u003E\u003Cli\u003EOUT – выход генератора.\u003C\/li\u003E\u003C\/ul\u003EПопробуем подключить этот модуль к Ардуино и научиться им управлять. Для начала ознакомимся с его функциональной схемой:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cimg alt=\"Функциональная схема AD9833\" border=\"0\" height=\"368\" src=\"https:\/\/2.bp.blogspot.com\/-69XH7GVpwgw\/WwpkdLAdMsI\/AAAAAAAAAac\/ZSRJJFMHR5gC4B_WuFojx1aAdrnlTiKDQCK4BGAYYCw\/s640\/AD9833_Functional_Diagram.png\" title=\"\" width=\"640\" \/\u003E\u003C\/div\u003E\u003Cbr \/\u003EAD9833 состоит из следующих основных частей: два регистра выбора частоты, аккумулятор фазы, два регистра выбора фазы и сумматор смещения фазы (вместе эти компоненты составляют генератор с цифровым управлением - NCO), SIN ROM для преобразования информации о фазе в амплитуду и 10-разрядный цифро-аналоговый преобразователь.\u003Cbr \/\u003E\u003Cbr \/\u003EИз схемы видно, что данные с интерфейса SPI передаются в управляющий регистр, регистры выбора фазы и частоты. Именно они определяют сигнал на выходе генератора. И программирование генератора сводится к изменению содержимого указанных регистров.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EУправляющий регистр\u003C\/h3\u003EЭто 16-разрядный регистр, управляющий работой генератора. Подробное описание его битов приведено ниже в таблице. Схема из даташита также наглядно демонстрирует их назначение:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s1600\/AD9833_Control_Bits.png\" imageanchor=\"1\"\u003E\u003Cimg border=\"0\" height=\"316\" src=\"https:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s640\/AD9833_Control_Bits.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"36\"\u003EБит \u003C\/th\u003E\u003Cth width=\"124\"\u003EНазвание \u003C\/th\u003E\u003Cth width=\"485\"\u003EНазначение \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E15, 14 \u003C\/td\u003E\u003Ctd\u003EDB15, DB14 \u003C\/td\u003E\u003Ctd\u003EЧтобы AD9833 понял, что принятое по SPI 16-битное слово содержит новое значение для управляющего регистра, два старших бита в слове должны быть установлены в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E13 \u003C\/td\u003E\u003Ctd\u003EB28 \u003C\/td\u003E\u003Ctd\u003EРегистры частоты AD9833 имеют разрядность 28 бит, поэтому для изменения их содержимого требуется передача двух 16-битных слов. Однако в некоторых случаях требуется изменить только старшую или младшую часть регистра частоты. Здесь и используется данный признак: B28 = 1 говорит о том, что необходимо обновить регистр частоты целиком и его новое значение будет передано двумя последовательными записями. Первая запись содержит 14 младших бит, вторая 14 старших бит. Первые два бита в обеих записях определяют регистр частоты, в который будет записано передаваемое значение и должны быть одинаковыми. Обновление регистра частоты происходит после получения полного слова, поэтому запись промежуточного значения в регистр исключена. B28 = 0 позволяет обновить отдельно старшую или младшую часть регистра. Какая именно часть будет изменена определяется управляющим битом HLB. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E12 \u003C\/td\u003E\u003Ctd\u003EHLB \u003C\/td\u003E\u003Ctd\u003EБит HLB определяет, какая из частей регистра частоты (младшая или старшая) будет перезаписана. Используется при B28 = 0. При B28 = 1 значение этого бита игнорируется. HLB = 1 позволяет обновить старшие 14 бит регистра частоты; HLB = 0 позволяет обновить младшие 14 бит регистра частоты. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E11 \u003C\/td\u003E\u003Ctd\u003EFSELECT \u003C\/td\u003E\u003Ctd\u003EБит FSELECT определяет, какой из регистров используется в аккумуляторе фазы – FREQ0 или FREQ1. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E10 \u003C\/td\u003E\u003Ctd\u003EPSELECT \u003C\/td\u003E\u003Ctd\u003EБит PSELECT определяет, данные какого из регистров PHASE0 или PHASE1 добавляются к выходу аккумулятора фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E9 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E8 \u003C\/td\u003E\u003Ctd\u003ERESET \u003C\/td\u003E\u003Ctd\u003ERESET = 1 сбрасывает внутренние регистры генератора в 0. Сброс не затрагивает регистры управления, частоты и фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E7 \u003C\/td\u003E\u003Ctd\u003ESLEEP1 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP1 = 1 запрещается внутреннее тактирование, приостанавливается работа NCO и выход генератора остается в своем текущем состоянии. При SLEEP1 = 0 тактирование разрешено. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E6 \u003C\/td\u003E\u003Ctd\u003ESLEEP12 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP12 = 1 отключается внутренний ЦАП. Это может быть полезно для генерации прямоугольных импульсов, при которой не требуется выполнение цифро-аналоговых преобразований. При SLEEP12 = 0 внутренний ЦАП активен. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E5 \u003C\/td\u003E\u003Ctd\u003EOPBITEN \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом MODE управляют выходом генератора. При OPBITEN = 1 внутренний ЦАП отключается от выхода VOUT и для генерации выходного сигнала используется значение старшего значащего бита с входа ЦАП, что позволяет получить на выходе генератора прямоугольные импульсы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E4 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E3 \u003C\/td\u003E\u003Ctd\u003EDIV2 \u003C\/td\u003E\u003Ctd\u003EИспользуется в паре со значением OPBITEN = 1. При DIV2 = 1 значение старшего значащего бита данных с входа ЦАП подается напрямую на выход VOUT. DIV2 = 0 позволяет задействовать делитель частоты и уменьшить частоту выходного сигнала вдвое. При OPBITEN = 0 значение данного бита игнорируется. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E2 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E1 \u003C\/td\u003E\u003Ctd\u003EMODE \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом OPBITEN управляют выходом генератора. При OPBITEN = 1 бит MODE должен быть установлен в 0. Значение MODE = 0 позволяет получить на выходе генератора синусоидальный сигнал. При MODE = 1 на выходе будет треугольный сигнал. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E0 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EИ для лучшего понимания назначения битов OPBITEN, MODE и DIV2 я приведу таблицу с их допустимыми комбинациями и формой результирующих сигналов на выходе:\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"73px\"\u003EOPBITEN \u003C\/th\u003E\u003Cth width=\"73px\"\u003EMODE \u003C\/th\u003E\u003Cth width=\"73px\"\u003EDIV2 \u003C\/th\u003E\u003Cth\u003EСигнал на выходе VOUT \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003EX \u003C\/td\u003E\u003Ctd\u003EСинусоидальный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EТреугольный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F\/2 \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EЗарезервировано \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EРегистры частоты и фазы\u003C\/h3\u003E\u003Cdiv\u003EГенератор AD9833 имеет 2 регистра частоты и 2 регистра фазы разрядностью 28 бит и 12 бит соответственно.\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВыбор активного регистра частоты осуществляется установкой управляющего бита FSELECT: при FSELECT = 0 активным является FREQ0; при FSELECT = 1 активен регистр FREQ1. Результирующая частота на выходе генератора определяется следующим образом:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(F\u003Csub\u003EMCLK\u003C\/sub\u003E \/ 2\u003Csup\u003E28\u003C\/sup\u003E) * FREQREG,\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003Eгде F\u003Csub\u003EMCLK\u003C\/sub\u003E – это опорная частота, FREQREG – значение, загруженное в активный регистр частоты. Таким образом, если мы хотим получить на выходе генератора сигнал с частотой 400Гц при опорной частоте 25МГц, в активный регистр\u0026nbsp; должно быть загружено значение:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EFREQREG = F\u003Csub\u003EOUT\u003C\/sub\u003E*2\u003Csup\u003E28\u003C\/sup\u003E \/ F\u003Csub\u003EMCLK\u003C\/sub\u003E = 400Гц * 2\u003Csup\u003E28\u003C\/sup\u003E \/ 25МГц ≈ 4295\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EДля того чтобы загрузить значение FREQREG в регистр частоты необходимо старшие биты передаваемого по SPI значения установить в 01 для загрузки в FREQ0 или 10 для загрузки в FREQ1. Напомню, что общение с AD9833 осуществляется по SPI 16-битными словами.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФаза выходного сигнала определяется следующим образом:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(2π \/ 2\u003Csup\u003E12\u003C\/sup\u003E) * PHASEREG\u003Cbr \/\u003E\u003Cbr \/\u003Eсоответственно, значение для регистра фазы вычисляется по формуле:\u003Cbr \/\u003E\u003Cbr \/\u003EPHASEREG = PHASE*2\u003Csup\u003E12\u003C\/sup\u003E\u0026nbsp;\/ 2π\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВ приведенных формулах PHASEREG – это значение активного регистра фазы. Выбор активного регистра осуществляется установкой управляющего бита PSELECT: при PSELECT = 0 активным является PHASE0; при PSELECT = 1 активен регистр PHASE1.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EПри записи нового значения в регистр фазы старшие биты должны быть установлены в 11, а выбор регистра, в который должно быть записано значение, осуществляется установкой бита 13: при нулевом его значении будет обновлен регистр PHASE0; при установке указанного бита в 1 будет обновлен регистр PHASE1. 12й бит не используется, а биты с 0 по 11 содержат значение для регистра фазы.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EРазрядность регистра частоты в 28 бит при опорной частоте 25МГц обеспечивает шаг 0.1Гц для установки частоты сигнала на выходе. А 12-битный регистр фазы обеспечивает разрешение 2π\/4096.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003EТестовая программа для AD9833 на Ардуино\u003C\/h3\u003E\u003C\/div\u003E\u003Cdiv\u003EТеперь мы можем написать первую программу для AD9833. Схема подключения модуля AD9833 к Ардуино и скетч приведены ниже.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s1600\/AD9833_Arduino.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема подключения AD9833 к Ардуино\" border=\"0\" height=\"428\" src=\"https:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s640\/AD9833_Arduino.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EС подключением все просто: общение с модулем происходит по интерфейсу SPI, для которого на Ардуино отведены следующие пины:\u003Cbr \/\u003E\u003Cbr \/\u003ED10 - SS (Slave Select - выбор ведомого), к нему подключаем вывод FSYNC модуля.\u003Cbr \/\u003ED11 - MOSI (Master Out Slave In - выход ведущего, вход ведомого), к нему подключаем вывод SDATA.\u003Cbr \/\u003ED13 - SCK (Serial Clock - Тактовый сигнал), к нему подключаем вывод SCLK.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;SPI.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2100\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0001 0000 0000 - Reset + DB28\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x50C7\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0101 0000 1100 0111 - Freq0 LSB (4295)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x4000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0100 0000 0000 0000 - Freq0 MSB (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0xC000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/1100 0000 0000 0000 - Phase0 (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Exit Reset\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E WriteAD9833(uint16_t Data){\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.beginTransaction(SPISettings(SPI_CLOCK_DIV2, MSBFIRST, SPI_MODE2));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdelayMicroseconds\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.transfer16(Data);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.endTransaction();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Синусоидальный сигнал\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2002\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0010 - MODE=1 - Треугольный\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2020\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 0000 - OPBITEN=1 - Прямоугольный (MSB\/2)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2028\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 1000 - OPBITEN=1, DIV2=1 - Прямоугольный (MSB)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E }\u003C\/pre\u003E\u003Cbr \/\u003EВ данном скетче выполняются следующие действия:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EПри первом вызове функции WriteAD9833 производится установка управляющего регистра: бит RESET устанавливается в 1 для выполнения сброса; бит DB28 устанавливается в 1 для перезаписи всего содержимого регистра частоты; биты FSELECT и PSELECT содержат 0, поэтому для генерации выходного сигнала будут использоваться регистры FREQ0 и PHASE0.\u003C\/li\u003E\u003Cli\u003EСледующие два вызова передают значение 4295 в регистр частоты FREQ0. Данное значение умещается в 14 младших разрядах, поэтому в старшие разряды регистра записываем нули.\u003C\/li\u003E\u003Cli\u003EСдвиг по фазе не требуется - запишем в регистр PHASE0 значение 0\u003C\/li\u003E\u003Cli\u003EПоследним вызовом WriteAD9833 в процедуре setup снимаем бит RESET, разрешая тем самым работу генератора. Результирующий сигнал поступает на вывод VOUT.\u003C\/li\u003E\u003Cli\u003EСледующие вызовы WriteAD9833 в функции loop обновляют содержимое управляющего регистра, перебирая комбинации битов MODE, OPBITEN и DIV2 для генерации сигнала синусоидальной, треугольной и прямоугольной форм.\u003C\/li\u003E\u003C\/ul\u003EВот как выглядит выходной сигнал генератора в виртуальном осциллографе:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s1600\/AD9833_sin.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"347\" src=\"https:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s640\/AD9833_sin.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСинусоидальный сигнал (биты\u0026nbsp;MODE и\u0026nbsp;OPBITEN сброшены в 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s1600\/AD9833_tri.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s640\/AD9833_tri.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EТреугольный сигнал (MODE = 1, OPBITEN = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s1600\/AD9833_MSBdiv2.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s640\/AD9833_MSBdiv2.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 1)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s1600\/AD9833_MSB.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s640\/AD9833_MSB.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EОбратите внимание: при генерации синусоидальных и треугольных импульсов, когда сигнал снимается с выхода ЦАП, его амплитуда изменяется в диапазоне 38мВ...0,65В. При генерации импульсов прямоугольной формы мы имеем дело с обычным цифровым сигналом с соответствующими уровнями напряжения. Так в последних двух осциллограммах логической единице соответствует напряжение ~4,5В.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EГенератор на AD9833 с дисплеем и энкодером\u003C\/h3\u003E\u003Cdiv\u003EРазобравшись с управлением AD9833 можно приступать к созданию генератора с интерфейсом управления и индикацией. Для этого добавим в нашу схему энкодер вращения и жидкокристаллический дисплей:\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s1600\/AD9833_generator.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема генератора на AD9833 с дисплеем и энкодером KY-040\" border=\"0\" height=\"466\" src=\"https:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s640\/AD9833_generator.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html\" target=\"_blank\"\u003EРанее\u003C\/a\u003E я писал о том, как можно сделать меню на Ардуино с энкодером вращения. И сейчас я взял такое меню за основу скетча, добавив в него функционал для работы с AD9833. Скачать скетч можно по \u003Ca href=\"http:\/\/clc.la\/ad9833_generator\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EПри включении питания AD9833 настраивается на генерацию синусоидального сигнала частотой 100Гц, соответствующая информация отображается на дисплее. Вращая ручку энкодера можно изменять его частоту, а при нажатии вызывается меню. В меню доступны следующие опции:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EУстановка частоты (можно задать произвольное значение от 1 до 12,5МГц).\u003C\/li\u003E\u003Cli\u003EУстановка фазы (0 - 360°).\u003C\/li\u003E\u003Cli\u003EВыбор формы сигнала.\u003C\/li\u003E\u003Cli\u003EВыбор значения, на которое изменяется частота при вращении ручки энкодера.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EОстается только поместить все компоненты в подходящий корпус и получится законченное устройство. Результат работы в следующем ролике:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/5NsUpivK9OU\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/5NsUpivK9OU?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4256446582282147909\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html#comment-form","title":"Комментарии: 212"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html","title":"Генератор сигналов на AD9833"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s72-c\/AD9833.jpg","height":"72","width":"72"},"thr$total":{"$t":"212"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-7503203481735826639"},"published":{"$t":"2018-04-07T17:48:00.000+03:00"},"updated":{"$t":"2019-01-12T23:05:15.753+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"}],"title":{"type":"text","$t":"Пара слов о текстовых LCD дисплеях"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-Y5Nck07ooEE\/WsjJeVXwAUI\/AAAAAAAAAZc\/0xa_40P5AF4ILIMEDpH1evSX9C-4PmiqQCK4BGAYYCw\/s1600\/lcd_i2c.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"LCD HD44780\" border=\"0\" height=\"255\" src=\"https:\/\/4.bp.blogspot.com\/-Y5Nck07ooEE\/WsjJeVXwAUI\/AAAAAAAAAZc\/0xa_40P5AF4ILIMEDpH1evSX9C-4PmiqQCK4BGAYYCw\/s320\/lcd_i2c.png\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EПоследнее время я довольно часто использую текстовый LCD дисплей в своих проектах. При этом всю информацию приходится выводить на английском, в принципе меня это не особо беспокоит. Одно время искал библиотеки типа LiquidCrystal_I2C_RUS (думаю, как и многие), но так ничего и не нашел. И недавно возникло у меня желание разобраться в работе дисплея, как в нем выводятся символы и, может быть, написать свою библиотеку для дисплеев с I2C интерфейсом, поддерживающую кириллицу.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EНачал я с изучения \u003Ca href=\"http:\/\/clc.la\/hd44780_datasheet\" target=\"_blank\"\u003Eдаташита\u003C\/a\u003E на чип HD44780, который лежит в основе большинства знакогенерирующих дисплеев. Читаю, что в него входит:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003Eдва 8-битных регистра: регистр инструкций (IR) и регистр данных (DR);\u003C\/li\u003E\u003Cli\u003E8-битная линия данных. Обмен данными возможен по 8- и 4-битному интерфейсу;\u003C\/li\u003E\u003Cli\u003Eпамять DDRAM - Display Data RAM - содержит 8-битные коды символов и определяет отображаемые на дисплее данные;\u003C\/li\u003E\u003Cli\u003Eпамять CGRAM - Character Generator RAM - содержит изменяемые пользователем символы (шаблоны символов). Может хранить 8 символов размером 5*8 или 4 символа 5*10;\u003C\/li\u003E\u003Cli\u003Eпамять CGROM - Character Generator ROM - содержит шаблоны символов, которые могут быть выведены на дисплей. Объем памяти CGROM позволяет хранить 208 символов размером 5*8 и 32 символа 5*10.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EСодержимое CGROM - это по сути шрифт дисплея. И ключевым здесь является то, что данная память не перезаписываемая, ее содержимое закладывается заводом изготовителем. Чипы HD44780 выпускаются в двух модификациях: с поддержкой японского и европейского шрифтов, что отражено в обозначении чипов (например, HCD44780UA00 - Japanese standard font и HCD44780UA02 - European standard font). В даташите можно увидеть, что европейский шрифт содержит кириллические символы. Таким образом, \u003Cb\u003Eесли вам принципиальна возможность вывода русского текста, то ищите дисплей с его поддержкой.\u003C\/b\u003E Без этого никакие библиотеки не помогут. Разумеется, мало кто знает об этих тонкостях при покупке.\u003Cbr \/\u003E\u003Cbr \/\u003EЯ закупаю детали на Aliexpress и что-то мне не попадались там текстовые дисплеи с поддержкой русского. Такие дисплеи можно найти в отечественных интернет-магазинах, но и ценник\u0026nbsp;на них\u0026nbsp;другой.\u003Cbr \/\u003E\u003Cbr \/\u003EВ общем, мой дисплей содержит японский набор символов и идею вывода русского текста пришлось оставить. Есть, конечно, способы: по максимуму использовать латинские символы вместо русских, недостающие выводить с помощью 8 пользовательских шаблонов из CGRAM, причем изменять их по мере необходимости, отказаться от строчных букв, формулировать текст так, чтобы обходиться имеющимися буквами. Этого хватит, чтобы вывести, например, \"ДABЛEHИE: \" (буквы Д, Л, И описываем в CGRAM) или \"TEMПEPATYPA: \" (П в CGRAM) и т.п. Но мне такой способ не подходит, так что пока не разживусь дисплеем с русским шрифтом, придется выводить текст на английском.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/7503203481735826639\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/04\/lcd-hd44780.html#comment-form","title":"Комментарии: 2"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/7503203481735826639"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/7503203481735826639"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/04\/lcd-hd44780.html","title":"Пара слов о текстовых LCD дисплеях"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-Y5Nck07ooEE\/WsjJeVXwAUI\/AAAAAAAAAZc\/0xa_40P5AF4ILIMEDpH1evSX9C-4PmiqQCK4BGAYYCw\/s72-c\/lcd_i2c.png","height":"72","width":"72"},"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-6066046460405325723"},"published":{"$t":"2018-01-04T20:26:00.004+03:00"},"updated":{"$t":"2020-09-08T14:40:12.877+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Текстовое меню на Ардуино"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-1v-V86ohqeA\/Wk4hPRnJAKI\/AAAAAAAAAWE\/fIZE0cFQckcu2qCf54HyPzQZHLXpcU08gCK4BGAYYCw\/s1600\/Arduino_text_menu.png\"\u003E\u003Cimg alt=\"Текстовое меню для Ардуино на ЖК дисплее и энкодере вращения\" border=\"0\" height=\"225\" src=\"https:\/\/3.bp.blogspot.com\/-1v-V86ohqeA\/Wk4hPRnJAKI\/AAAAAAAAAWE\/fIZE0cFQckcu2qCf54HyPzQZHLXpcU08gCK4BGAYYCw\/s320\/Arduino_text_menu.png\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cbr \/\u003E\u003C\/div\u003EВ данной публикации я хочу поделиться опытом создания текстового меню на Ардуино. Я буду использовать жидкокристаллический I2C дисплей 20x4 и энкодер вращения KY-040 в качестве элемента управления. О подключении энкодера к Ардуино и подавлении дребезга контактов было написано уже достаточно, с подключением дисплея вопросов тоже\u0026nbsp;быть не должно. Поэтому сегодня я уделю внимание именно программной реализации.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003EИтак, имеем:\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EКлон Arduino UNO;\u003C\/li\u003E\u003Cli\u003EI2C дисплей 20x4. Для работы с ним необходима библиотека\u0026nbsp;\u003Ca href=\"https:\/\/github.com\/fdebrabander\/Arduino-LiquidCrystal-I2C-library\" target=\"_blank\"\u003ELiquidCrystal_I2C\u003C\/a\u003E. Думаю, вместо него можно использовать дисплей без I2C интерфейса и библиотеку\u0026nbsp;LiquidCrystal. В этом случае правки скетча если и потребуются, то минимальные;\u003C\/li\u003E\u003Cli\u003EЭнкодер вращения с кнопкой. Я использую модуль KY-040.\u003C\/li\u003E\u003Cli\u003EМикросхема\u0026nbsp;\u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2017\/11\/2-mc14490.html\" target=\"_blank\"\u003EMC14490\u003C\/a\u003E\u0026nbsp;для подавления дребезга. С ней энкодер работает значительно лучше. Но в принципе можно обойтись и без неё или любого другого аппаратного подавителя дребезга, в этом случае выводы энкодера подключите непосредственно ко входам Ардуино.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003E\u003Cbr \/\u003EСоединяем всё это на макетной плате по следующей схеме:\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-TYYTdldJ8rI\/Wk5gmx4cpvI\/AAAAAAAAAWU\/4AMQgLasANE4wTfnKyUeWOxw9CFNFSwiQCK4BGAYYCw\/s1600\/Arduino_encoder_menu.png\"\u003E\u003Cimg alt=\"Текстовое меню на Ардуино. Схема с энкодером вращения KY-040\" border=\"0\" height=\"254\" src=\"https:\/\/4.bp.blogspot.com\/-TYYTdldJ8rI\/Wk5gmx4cpvI\/AAAAAAAAAWU\/4AMQgLasANE4wTfnKyUeWOxw9CFNFSwiQCK4BGAYYCw\/s640\/Arduino_encoder_menu.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EМои основные требования к реализации:\u003C\/div\u003E\u003Cdiv\u003E\u003Ca href=\"https:\/\/draft.blogger.com\/blogger.g?blogID=794788004739538112\" style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"\u003E\u003Cimg border=\"0\" height=\"16\" id=\"2vxa1kzh4w9z\" src=\"data:image\/gif;base64,R0lGODlhEAAQAOUdAOvr69HR0cHBwby8vOzs7PHx8ff397W1tbOzs+Xl5ebm5vDw8PPz88PDw7e3t+3t7dvb2+7u7vX19eTk5OPj4+rq6tbW1unp6bu7u+fn5+jo6N\/f3+\/v7\/7+\/ra2ttXV1f39\/fz8\/Li4uMXFxfb29vLy8vr6+sLCwtPT0\/j4+PT09MDAwL+\/v7m5ubS0tM7OzsrKytra2tTU1MfHx+Li4tDQ0M\/Pz9nZ2b6+vgAAAAAAAAAAAAAAAAAAAAAAAAAAACH\/C05FVFNDQVBFMi4wAwEAAAAh+QQFMAA5ACwAAAAAEAAQAAAGg8CcMAcICAY5QsEwHBYPCMQhl6guGM5GNOqgVhMPbA6y5Xq\/kZwkN3Fsu98EJcdYKCo5i7kKwCorVRd4GAg5GVgAfBpxaRtsZwkaiwpfD0NxkYl8QngARF8AdhmeDwl4pngUCQsVHDl2m2iveDkXcZ6YTgS3kAS0RKWxVQ+\/TqydrE1BACH5BAkwADkALAAAAAAQABAAAAZ+wJwwJ1kQIgNBgDMcdh6KRILgQSAOn46TIJVSrdZGSMjpeqtgREAoYWi6BFF6xCAJS6ZyYhEIUwxNQgYkFxwBByh2gU0kKRVHi4sgOQuRTRJtJgwSBJElihwMQioqGmw5gEMLKk2AEkSBq4ElQmNNoYG2OVpDuE6Lrzmfp0NBACH5BAUwADkALAAAAAAQABAAAAaFwJwwJ1kQCDlCwTAcMh6KhDQnVSwYTkJ1un1gc5wtdxsh5iqaLbVKyVEWigq4ugZgTyiA9CK\/JHIZWCsICCxpVWV\/EzkHhAgth1UPQ4OOLXpScmebFA6ELHAZclBycXIULi8VZXCZawplFG05flWlakIVWravCgSaZ1CuksBDFQsAcsfFQQAh+QQJMAA5ACwAAAAAEAAQAAAGQcCccEgsGo\/IpHLJzDGaOcKCCUgkAEuFNaFRbq1dJCxX2WKRCFdMmJiiEQjRp1BJwu8y5R3RWNsRBx9+SSsxgzlBACH5BAkwADkALAAAAAAQABAAAAaJwJwwJ1kQCDlCwTAcMh6KhDQnVSwYTkJ1un1gc5wtdxsh5iqaLbVKyTEWigq4ugZglRXpRX5J5DJYAFIAaVVlfhNrURqFVQ9DYhqCgzkzCGdnVQBwGRU0LQiXCRUAORQJCwAcOTChoYplBXIKLq6vUXRCCQ22olUEcroJB66KD8FNCjUrlxWpTUEAIfkEBTAAOQAsAAAAABAAEAAABobAnDAnWRAIOULBMBwyHoqENCdVLBhOQnW6fWBznC13G8nZchXNllql5Bg2xA1cZQOwShwCMdDkLgk5GVgAUgAie3syVDkTbFIaiIkIJ0NiGnp7HiNonRVVAHEuFjlQFVQVAI0JCzYjrKCPZQWnf1unYkMVWrFbBLVoUIaPD8C6CwCnAMhNQQA7\" style=\"cursor: move;\" width=\"16\" \/\u003E\u003C\/a\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EВозможность удобного описания меню;\u003C\/li\u003E\u003Cli\u003EВозможность построения многоуровнего меню - само собой;\u003C\/li\u003E\u003Cli\u003EПрокрутка длинных пунктов меню;\u003C\/li\u003E\u003Cli\u003EФишки вроде индикаторов, подсказывающих, что не все пункты уместились на экране или автоотключение подсветки\u0026nbsp;тоже будут кстати.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003EСразу приведу пример использования меню, чтобы было проще объяснять его работу. Скачать скетч можно по \u003Ca href=\"http:\/\/clc.la\/arduino_text_menu\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ci\u003EОбратите внимание! После написания данной статьи я создал библиотеку\u0026nbsp;\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2020\/09\/LiquidCrystal-I2C-Menu.html\" target=\"_blank\"\u003ELiquidCrystal_I2C_Menu\u003C\/a\u003E. В ней вы найдёте функции для построения меню, ввода и выбора значений и многое другое.\u0026nbsp;\u003C\/i\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255, 255, 255); color: #434f54; display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ ***** I2C дисплей *****\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C.h\u0026gt;\u003C\/span\u003E \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ https:\/\/github.com\/fdebrabander\/Arduino-LiquidCrystal-I2C-library\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E cols 20\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E rows 4\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C lcd(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0x27\u003C\/span\u003E, cols, rows);\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Echar\u003C\/span\u003E *Blank;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ ********** Параметры меню **********\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E ShowScrollBar 1     \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Показывать индикаторы прокрутки (0\/1)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E ScrollLongCaptions 1\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Прокручивать длинные названия (0\/1)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E ScrollDelay 800     \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Задержка при прокрутке текста\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E BacklightDelay 20000\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Длительность подсветки\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E ReturnFromMenu 0    \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Выходить из меню после выбора элемента(0\/1)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eenum\u003C\/span\u003E eMenuKey {mkNull, mkBack, mkRoot, mkQuad, mkQuadSetA, mkQuadSetB, mkQuadSetC, mkQuadCalc, mkMulti, mkSettings, mkSetMotors,\u003Cbr \/\u003E               mkMotorsAuto, mkMotorsManual, mkSetSensors, mkSetUltrasonic, mkSetLightSensors, mkSetDefaults\u003Cbr \/\u003E              };\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ ********** Переменные для энкодера ***************\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E pin_CLK 2 \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Энкодер пин A\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E pin_DT  4 \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Энкодер пин B\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" color=\"\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" color=\"\"\u003Edefine\u003C\/span\u003E pin_Btn 3 \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Кнопка\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Elong\u003C\/span\u003E CurrentTime, PrevEncoderTime;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eenum\u003C\/span\u003E eEncoderState {eNone, eLeft, eRight, eButton};\u003Cbr \/\u003EeEncoderState EncoderState;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E EncoderA, EncoderB, EncoderAPrev, counter;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebool\u003C\/span\u003E ButtonPrev;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ ********** Прототипы функций ***************\u003C\/span\u003E\u003Cbr \/\u003EeEncoderState GetEncoderState();\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E LCDBacklight(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E v = \u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E);\u003Cbr \/\u003EeMenuKey DrawMenu(eMenuKey Key);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ ********** Обработчики для пунктов меню **********\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E InputValue(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Echar\u003C\/span\u003E* Title, \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E DefaultValue, \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E MinValue, \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E MaxValue) {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Вспомогательная функция для ввода значения\u003C\/span\u003E\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(Title);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(DefaultValue);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E100\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewhile\u003C\/span\u003E (\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E)\u003Cbr \/\u003E  {\u003Cbr \/\u003E    EncoderState = GetEncoderState();\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eswitch\u003C\/span\u003E (EncoderState) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eNone: {\u003Cbr \/\u003E          LCDBacklight();\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Econtinue\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eButton: {\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ereturn\u003C\/span\u003E DefaultValue;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eLeft: {\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (DefaultValue \u0026gt; MinValue) DefaultValue--;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eRight: {\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (DefaultValue \u0026lt; MaxValue) DefaultValue++;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(DefaultValue);\u003Cbr \/\u003E  }\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E A = \u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E, B = \u003Cspan class=\"hljs-number\" color=\"\"\u003E5\u003C\/span\u003E, C = \u003Cspan class=\"hljs-number\" color=\"\"\u003E-3\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E Demo() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"It's just a demo\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewhile\u003C\/span\u003E (GetEncoderState() == eNone) LCDBacklight();\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E InputA() {\u003Cbr \/\u003E  A = InputValue(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Input A\"\u003C\/span\u003E, A, \u003Cspan class=\"hljs-number\" color=\"\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewhile\u003C\/span\u003E (A == \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Shouldn't be 0!\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Input another value\"\u003C\/span\u003E);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewhile\u003C\/span\u003E (GetEncoderState() == eNone) LCDBacklight();\u003Cbr \/\u003E    A = InputValue(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Input A\"\u003C\/span\u003E, A, \u003Cspan class=\"hljs-number\" color=\"\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E  }\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E InputB() {\u003Cbr \/\u003E  B = InputValue(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Input B\"\u003C\/span\u003E, B, \u003Cspan class=\"hljs-number\" color=\"\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E InputC() {\u003Cbr \/\u003E  C = InputValue(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Input C\"\u003C\/span\u003E, C, \u003Cspan class=\"hljs-number\" color=\"\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E Solve() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E D;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Efloat\u003C\/span\u003E X1, X2;\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(A);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"X^2\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (B \u0026gt;= \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"+\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(B);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"X\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (C \u0026gt;= \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"+\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(C);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"=0\"\u003C\/span\u003E);\u003Cbr \/\u003E  D = B * B - \u003Cspan class=\"hljs-number\" color=\"\"\u003E4\u003C\/span\u003E * A * C;\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (rows \u0026gt; \u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E) {\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"D=\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(D);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (D == \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E    X1 = -B \/ \u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E * A;\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"X1=X2=\"\u003C\/span\u003E); lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(X1);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (D \u0026gt; \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E    X1 = (-B - \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Esqrt\u003C\/span\u003E(B * B - \u003Cspan class=\"hljs-number\" color=\"\"\u003E4\u003C\/span\u003E * A * C)) \/ (\u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E * A);\u003Cbr \/\u003E    X2 = (-B + \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Esqrt\u003C\/span\u003E(B * B - \u003Cspan class=\"hljs-number\" color=\"\"\u003E4\u003C\/span\u003E * A * C)) \/ (\u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E * A);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"X1=\"\u003C\/span\u003E);  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(X1);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\";X2=\"\u003C\/span\u003E); lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(X2);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Roots are complex\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewhile\u003C\/span\u003E (GetEncoderState() == eNone) LCDBacklight();\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ ******************** Меню ********************\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E ScrollUp[\u003Cspan class=\"hljs-number\" color=\"\"\u003E8\u003C\/span\u003E]  = {\u003Cspan class=\"hljs-number\" color=\"\"\u003E0x4\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0xa\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x11\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x1f\u003C\/span\u003E};\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E ScrollDown[\u003Cspan class=\"hljs-number\" color=\"\"\u003E8\u003C\/span\u003E]  = {\u003Cspan class=\"hljs-number\" color=\"\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x1f\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x11\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0xa\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0x4\u003C\/span\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E ItemsOnPage = rows;    \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Максимальное количество элементов для отображения на экране\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Elong\u003C\/span\u003E BacklightOffTime = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Elong\u003C\/span\u003E ScrollTime = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E ScrollPos;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E CaptionMaxLength;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Estruct\u003C\/span\u003E sMenuItem {\u003Cbr \/\u003E  eMenuKey  Parent;       \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Ключ родителя\u003C\/span\u003E\u003Cbr \/\u003E  eMenuKey  Key;          \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Ключ\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Echar\u003C\/span\u003E      *Caption;     \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Название пункта меню\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E      (*Handler)(); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Обработчик\u003C\/span\u003E\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003EsMenuItem Menu[] = {\u003Cbr \/\u003E  {mkNull, mkRoot, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Menu\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E    {mkRoot, mkQuad, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Quadratic Equation Calculator\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E      {mkQuad, mkQuadSetA, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Enter value A\"\u003C\/span\u003E, InputA},\u003Cbr \/\u003E      {mkQuad, mkQuadSetB, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Enter value B\"\u003C\/span\u003E, InputB},\u003Cbr \/\u003E      {mkQuad, mkQuadSetC, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Enter value C\"\u003C\/span\u003E, InputC},\u003Cbr \/\u003E      {mkQuad, mkQuadCalc, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Solve\"\u003C\/span\u003E, Solve},\u003Cbr \/\u003E      {mkQuad, mkBack, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E    {mkRoot, mkMulti, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Multi-level menu example\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E      {mkMulti, mkSettings, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Settings\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E        {mkSettings, mkSetMotors, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Motors\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E          {mkSetMotors, mkMotorsAuto, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Auto calibration\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetMotors, mkMotorsManual, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Manual calibration\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetMotors, mkBack, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E        {mkSettings, mkSetSensors, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Sensors\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E          {mkSetSensors, mkSetUltrasonic, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Ultrasonic\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetSensors, mkSetLightSensors, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Light sensors\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetSensors, mkBack, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E        {mkSettings, mkSetDefaults, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Restore defaults\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E        {mkSettings, mkBack, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E      {mkMulti, mkBack, \u003Cspan class=\"hljs-string\" color=\"\"\u003E\"Back\"\u003C\/span\u003E, NULL}\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E MenuLength = \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Esizeof\u003C\/span\u003E(Menu) \/ \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Esizeof\u003C\/span\u003E(Menu[\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E]);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E LCDBacklight(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E v) { \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Управление подсветкой\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (v == \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) { \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Выключить подсветку\u003C\/span\u003E\u003Cbr \/\u003E    BacklightOffTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E();\u003Cbr \/\u003E    lcd.noBacklight();\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (v == \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E) { \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/Включить подсветку\u003C\/span\u003E\u003Cbr \/\u003E    BacklightOffTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E() + BacklightDelay;\u003Cbr \/\u003E    lcd.backlight();\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E { \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Выключить если время вышло\u003C\/span\u003E\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (BacklightOffTime \u0026lt; \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E())\u003Cbr \/\u003E      lcd.noBacklight();\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E      lcd.backlight();\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003EeMenuKey DrawMenu(eMenuKey Key) { \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Отрисовка указанного уровня меню и навигация по нему\u003C\/span\u003E\u003Cbr \/\u003E  eMenuKey Result;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E k, l, Offset, CursorPos, y;\u003Cbr \/\u003E  sMenuItem **SubMenu = NULL;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebool\u003C\/span\u003E NeedRepaint;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" color=\"\"\u003EString\u003C\/span\u003E S;\u003Cbr \/\u003E  l = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Запишем в SubMenu элементы подменю\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E; i \u0026lt; MenuLength; i++) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (Menu[i].Key == Key) {\u003Cbr \/\u003E      k = i;\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (Menu[i].Parent == Key) {\u003Cbr \/\u003E      l++;\u003Cbr \/\u003E      SubMenu = (sMenuItem**) realloc (SubMenu, l * \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Esizeof\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E*));\u003Cbr \/\u003E      SubMenu[l - \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E] = \u0026amp;Menu[i];\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (l == \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) { \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ l==0 - подменю нет\u003C\/span\u003E\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E ((ReturnFromMenu == \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) and (Menu[k].Handler != NULL)) (*Menu[k].Handler)(); \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Вызываем обработчик если он есть\u003C\/span\u003E\u003Cbr \/\u003E    LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ereturn\u003C\/span\u003E Key; \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ и возвращаем индекс данного пункта меню\u003C\/span\u003E\u003Cbr \/\u003E  }\u003Cbr \/\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Иначе рисуем подменю\u003C\/span\u003E\u003Cbr \/\u003E  CursorPos = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  Offset = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  ScrollPos = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  NeedRepaint = \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Edo\u003C\/span\u003E {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (NeedRepaint) {\u003Cbr \/\u003E      NeedRepaint = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E      y = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Eint\u003C\/span\u003E i = Offset; i \u0026lt; \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emin\u003C\/span\u003E(l, Offset + ItemsOnPage); i++) {\u003Cbr \/\u003E        lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, y++);\u003Cbr \/\u003E        lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003EString\u003C\/span\u003E(SubMenu[i]-\u0026gt;Caption).substring(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CaptionMaxLength));\u003Cbr \/\u003E      }\u003Cbr \/\u003E      lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E      lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"\u0026gt;\"\u003C\/span\u003E);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (ShowScrollBar) {\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (Offset \u0026gt; \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(cols - \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E);\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E);\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (Offset + ItemsOnPage \u0026lt; l) {\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(cols - \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, ItemsOnPage - \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E        }\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    EncoderState = GetEncoderState();\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eswitch\u003C\/span\u003E (EncoderState) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eLeft: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Прокрутка меню вверх\u003C\/span\u003E\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          ScrollTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" color=\"\"\u003E5\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (CursorPos \u0026gt; \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) {  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Если есть возможность, поднимаем курсор\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E ((ScrollLongCaptions) and (ScrollPos)) {\u003Cbr \/\u003E              \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Если предыдущий пункт меню прокручивался, то выводим его заново\u003C\/span\u003E\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003EString\u003C\/span\u003E(SubMenu[Offset + CursorPos]-\u0026gt;Caption).substring(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CaptionMaxLength));\u003Cbr \/\u003E              ScrollPos = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E            }\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Стираем курсор на старом месте, рисуем в новом\u003C\/span\u003E\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CursorPos--);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\" \"\u003C\/span\u003E);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"\u0026gt;\"\u003C\/span\u003E);\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (Offset \u0026gt; \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/Курсор уже в крайнем положении. Если есть пункты выше, то перерисовываем меню\u003C\/span\u003E\u003Cbr \/\u003E            Offset--;\u003Cbr \/\u003E            NeedRepaint = \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eRight: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Прокрутка меню вниз\u003C\/span\u003E\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          ScrollTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" color=\"\"\u003E5\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (CursorPos \u0026lt; \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emin\u003C\/span\u003E(l, ItemsOnPage) - \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E) {\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Если есть возможность, то опускаем курсор\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E ((ScrollLongCaptions) and (ScrollPos)) {\u003Cbr \/\u003E              \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Если предыдущий пункт меню прокручивался, то выводим его заново\u003C\/span\u003E\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003EString\u003C\/span\u003E(SubMenu[Offset + CursorPos]-\u0026gt;Caption).substring(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CaptionMaxLength));\u003Cbr \/\u003E              ScrollPos = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E            }\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Стираем курсор на старом месте, рисуем в новом\u003C\/span\u003E\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CursorPos++);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\" \"\u003C\/span\u003E);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" color=\"\"\u003E\"\u0026gt;\"\u003C\/span\u003E);\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Курсор уже в крайнем положении. Если есть пункты ниже, то перерисовываем меню\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (Offset + CursorPos + \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E \u0026lt; l) {\u003Cbr \/\u003E              Offset++;\u003Cbr \/\u003E              NeedRepaint = \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E            }\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eButton: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Выбран элемент меню. Нажатие кнопки Назад обрабатываем отдельно\u003C\/span\u003E\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          ScrollTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" color=\"\"\u003E5\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (SubMenu[CursorPos + Offset]-\u0026gt;Key == mkBack) {\u003Cbr \/\u003E            free(SubMenu);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ereturn\u003C\/span\u003E mkBack;\u003Cbr \/\u003E          }\u003Cbr \/\u003E          Result = DrawMenu(SubMenu[CursorPos + Offset]-\u0026gt;Key);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E ((Result != mkBack) and (ReturnFromMenu)) {\u003Cbr \/\u003E            free(SubMenu);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ereturn\u003C\/span\u003E Result;\u003Cbr \/\u003E          }\u003Cbr \/\u003E          NeedRepaint = \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ecase\u003C\/span\u003E eNone: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (ScrollLongCaptions) {\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ При бездействии прокручиваем длинные названия\u003C\/span\u003E\u003Cbr \/\u003E            S = SubMenu[CursorPos + Offset]-\u0026gt;Caption;\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (S.length() \u0026gt; CaptionMaxLength)\u003Cbr \/\u003E            {\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (ScrollTime \u0026lt; \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E())\u003Cbr \/\u003E              {\u003Cbr \/\u003E                ScrollPos++;\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (ScrollPos == S.length() - CaptionMaxLength)\u003Cbr \/\u003E                  ScrollTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" color=\"\"\u003E2\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Небольшая задержка когда вывели все название\u003C\/span\u003E\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (ScrollPos \u0026gt; S.length() - CaptionMaxLength)\u003Cbr \/\u003E                {\u003Cbr \/\u003E                  ScrollPos = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E                  ScrollTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" color=\"\"\u003E5\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Задержка перед началом прокрутки\u003C\/span\u003E\u003Cbr \/\u003E                }\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E                  ScrollTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E() + ScrollDelay;\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eprint\u003C\/span\u003E(S.substring(ScrollPos, ScrollPos + CaptionMaxLength));\u003Cbr \/\u003E              }\u003Cbr \/\u003E            }\u003Cbr \/\u003E          }\u003Cbr \/\u003E          LCDBacklight();\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E  } \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ewhile\u003C\/span\u003E (\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/****************************************\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003EpinMode\u003C\/span\u003E(pin_CLK, \u003Cspan class=\"hljs-literal\" color=\"\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003EpinMode\u003C\/span\u003E(pin_DT,  \u003Cspan class=\"hljs-literal\" color=\"\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003EpinMode\u003C\/span\u003E(pin_Btn, \u003Cspan class=\"hljs-literal\" color=\"\"\u003EINPUT_PULLUP\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.backlight();\u003Cbr \/\u003E  CaptionMaxLength = cols - \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E  Blank = (\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Echar\u003C\/span\u003E*) malloc(cols * \u003Cspan class=\"hljs-keyword\" color=\"\"\u003Esizeof\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Echar\u003C\/span\u003E));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E; i \u0026lt; CaptionMaxLength; i++)\u003Cbr \/\u003E    Blank[i] = \u003Cspan class=\"hljs-string\" color=\"\"\u003E' '\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (ShowScrollBar) {\u003Cbr \/\u003E    CaptionMaxLength--;\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EcreateChar\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E, ScrollUp);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EcreateChar\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E, ScrollDown);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  Blank[CaptionMaxLength] = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" color=\"\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  DrawMenu(mkRoot);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ ******************** Энкодер с кнопкой ********************\u003C\/span\u003E\u003Cbr \/\u003EeEncoderState GetEncoderState() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Считываем состояние энкодера\u003C\/span\u003E\u003Cbr \/\u003E  eEncoderState Result = eNone;\u003Cbr \/\u003E  CurrentTime = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Emillis\u003C\/span\u003E();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (CurrentTime \u0026gt;= (PrevEncoderTime + \u003Cspan class=\"hljs-number\" color=\"\"\u003E5\u003C\/span\u003E)) {\u003Cbr \/\u003E    PrevEncoderTime = CurrentTime;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" color=\"\"\u003EdigitalRead\u003C\/span\u003E(pin_Btn) == \u003Cspan class=\"hljs-literal\" color=\"\"\u003ELOW\u003C\/span\u003E ) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (ButtonPrev) {\u003Cbr \/\u003E        Result = eButton; \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Нажата кнопка\u003C\/span\u003E\u003Cbr \/\u003E        ButtonPrev = \u003Cspan class=\"hljs-number\" color=\"\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E      ButtonPrev = \u003Cspan class=\"hljs-number\" color=\"\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E      EncoderA = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003EdigitalRead\u003C\/span\u003E(pin_DT);\u003Cbr \/\u003E      EncoderB = \u003Cspan class=\"hljs-built_in\" color=\"\"\u003EdigitalRead\u003C\/span\u003E(pin_CLK);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E ((!EncoderA) \u0026amp;\u0026amp; (EncoderAPrev)) { \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ Сигнал A изменился с 1 на 0\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eif\u003C\/span\u003E (EncoderB) Result = eRight;     \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ B=1 =\u0026gt; энкодер вращается по часовой\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Eelse\u003C\/span\u003E          Result = eLeft;      \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ B=0 =\u0026gt; энкодер вращается против часовой\u003C\/span\u003E\u003Cbr \/\u003E      }\u003Cbr \/\u003E      EncoderAPrev = EncoderA; \u003Cspan class=\"hljs-comment\" color=\"\"\u003E\/\/ запомним текущее состояние\u003C\/span\u003E\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" color=\"\"\u003Ereturn\u003C\/span\u003E Result;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EМеню - это массив элементов\u0026nbsp;sMenuItem, каждый из которых имеет свой уникальный ключ и ключ родителя для создания иерархии, а также название и ссылку на функцию-обработчик. В качестве ключа я использую перечисления, т.к. они удобнее чем просто числовые значения. Ключ\u0026nbsp;mkBack имеет особое назначение: он нужен для пунктов меню \"Back\" - возврат на вышестоящий уровень меню.\u003Cbr \/\u003E\u003Cbr \/\u003EРеакция на выбор определенного пункта меню может быть построена двумя способами:\u003Cbr \/\u003E\u003Col style=\"text-align: left;\"\u003E\u003Cli\u003EЗадание функции обработчика. В этом случае параметр ReturnFromMenu должен быть установлен в 0. Если выбранный элемент не содержит дочерних элементов (т.е. это не подменю) и если для него задана функция-обработчик, то она будет вызвана. После выполнения функции управление будет передано обратно в меню.\u003C\/li\u003E\u003Cli\u003EАнализ значения, возвращаемого\u0026nbsp;функцией\u0026nbsp;DrawMenu. Для этого параметр ReturnFromMenu должен быть установлен в 1. Анализ возвращаемого значения (ключа выбранного элемента меню) легко осуществить при помощи оператора switch.\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003EВ данном примере я использую обработчики. Кроме упомянутого параметра ReturnFromMenu в скетче есть и другие: ShowScrollBar, ScrollLongCaptions, ScrollDelay, BacklightDelay. Их назначение понятно из названия.\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EФункция DrawMenu принимает ключ подменю, которое требуется отрисовать. Затем в цикле анализируется состояние энкодера. При его вращении осуществляется перемещение курсора и перерисовка меню. При нажатии вызывается функция DrawMenu для выбранного элемента. В остальное время выполняется прокрутка длинных названий.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EМеню верхнего уровня в данном скетче содержит 2 элемента: первый для решения квадратных уравнений, второй просто как пример построения многоуровнего меню. Параметр\u0026nbsp;ReturnFromMenu установлен в 0 и при выборе пунктов меню вызываются соответствующие обработчики. Так осуществляется задание коэффициентов квадратного уравнения и нахождение его корней (функции InputA, InputB, InputC, Solve). В обработчиках следует помнить об управлении подсветкой дисплея, для этого регулярно вызывается функция\u0026nbsp;LCDBacklight. Функция loop содержит единственный вызов\u0026nbsp;DrawMenu. Вся дальнейшая работа будет заключаться в отрисовке меню и выполнении функций-обработчиков.\u003Cbr \/\u003E\u003Cbr \/\u003EВот в общем-то и всё, остальное должно быть понятно из примера. Ну и в заключение дочитавшим до конца предлагаю видео работы этого меню:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/NQlAMYiuV1o\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/NQlAMYiuV1o?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/6066046460405325723\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html#comment-form","title":"Комментарии: 90"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/6066046460405325723"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/6066046460405325723"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html","title":"Текстовое меню на Ардуино"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-1v-V86ohqeA\/Wk4hPRnJAKI\/AAAAAAAAAWE\/fIZE0cFQckcu2qCf54HyPzQZHLXpcU08gCK4BGAYYCw\/s72-c\/Arduino_text_menu.png","height":"72","width":"72"},"thr$total":{"$t":"90"}}]}});